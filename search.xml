<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[二.算法与数据结构+一点点ACM从入门到进阶吐血整理推荐书单（珍藏版）]]></title>
    <url>%2Fposts%2F32a7f0eb%2F</url>
    <content type="text"><![CDATA[极客侠网站导航（全部书单资源导航页）：https://pymlovelyq.github.io/archives/ 前言：技术书阅读方法论一.速读一遍（最好在1~2天内完成）人的大脑记忆力有限，在一天内快速看完一本书会在大脑里留下深刻印象，对于之后复习以及总结都会有特别好的作用。 对于每一章的知识，先阅读标题，弄懂大概讲的是什么主题，再去快速看一遍，不懂也没有关系，但是一定要在不懂的地方做个记号，什么记号无所谓，但是要让自己后面再看的时候有个提醒的作用，看看第二次看有没有懂了些。 二.精读一遍（在2周内看完）有了前面速读的感觉，第二次看会有慢慢深刻了思想和意识的作用，具体为什么不要问我，去问30年后的神经大脑专家，现在人类可能还没有总结出为什么大脑对记忆的完全方法论，但是，就像我们专业程序员，打代码都是先实践，然后就渐渐懂了过程，慢慢懂了原理，所以第二遍读的时候稍微慢下来，2周内搞定。记住一句话：没看完一个章节后，总结一下这个章节讲了啥。很关键。 三.实践（在整个过程中都要）实践的时候，要注意不用都去实践，最好看着书，敲下代码，把重点的内容敲一遍有个肌肉记忆就很不错了。 以及到自己做过的项目中去把每个有涉及的原理的代码，研究一遍，就可以了 一共四个系列整整50+本电子书，找了好久终于齐了，如果都能看完看懂且科学的总结外加合理的实践，相信未来你的技术路会更好走，当然阿里巴巴，腾讯，阿里这些的Offer不将是梦，除了多看点技术书，你觉得还有什么能拿出来和985,211的朋友比呢？最近在学习算法和数据结构+涉及一点acm方面的知识，看到一篇好的关于数据结构和算法的书籍，如果计算机系只开三门课，那么这三门课就一定是：离散数学，数据结构与算法，编译原理。如果只开一门课，那剩下的就一定是：数据结构与算法。Niklaus Wirth说：算法＋数据结构＝程序，不说废话了，下面列出一份数据结构+算法书单，从入门到进阶说起。 先发个几个G的资源截图吧，感觉不错的点个小心心~ 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 以下是每本书的推荐语，清楚自己缺的是什么，就下定决心去补吧，一个好工作意味着高收入，投资自己的时间换来更宝贵的东西。 一.入门系列推荐理由：通过图片，打比方等通俗易懂的方法讲述算法的书籍让你能达到懂一些基础算法，线性表，堆栈，队列，树，图，DP算法，背包问题等，不要求会实现，但是看过以下这些书对于之后实现算法打下坚实的思维基础。 1.1《啊哈！算法哈磊》 插图和讲解相当到位~~让人看了很感兴趣，把算法用非常形象的方式表达出来，通俗易懂，这下学习算法的朋友有福了。很有趣。书里面主要本书中涉及到的数据结构有栈、队列、链表、树、并查集、堆和图等；涉及到的算法有排序、枚举、深度和广度优先搜索、图的遍历、最短路径、两种最小生成树、割点与割边、二分图最大匹配。 1.2《算法图解》 算法教科书通常让人昏昏欲睡,麻烦就在于算法是绕不开的必修课。以前大学有这个课程，看过几本算法书，都不太满意，看不懂很打击自信心。而这本图解书确实有所突破，很容易看懂，不枯燥。书不到200页，我几个小时就看了一半。虽然都是些入门级的算法，经过作者梳理后就很清晰了。我觉得这是最好的最有趣的算法入门书。媲美国内的《啊哈算法》那本书。读完本书虽然没有什么高深的算法，但是可以自信地说算法入门了。 1.3《妙趣横生的算法（C语言实现 第2版）》 在有些章节的代码有些错误，会令人误解，但还是一本很不错的书，主要是讲解的非常详细，相比较经典书籍而言，经典书过于简练，再加上中文译者在那卖弄学术，弄得苦涩难读，这本书还是好很多，起码用中国人熟悉的语言由浅入深详细描述基本原理。 1.4《趣学算法》 非常好的一本书，图解多，思路清晰，不仅讲了问题分析算法设计的过程，还讲了如何优化算法，不同的数据结构上设计算法会有什么样的复杂度。值得推荐。 1.5《大话数据结构》 时逢找工作，为笔试准备，需数据结构、数据库、c/c++、计算机系统、网络方面知识。对于数据结构，力荐此书，通俗易懂，非常适合计算机相关专业朋友…本人本科初学数据结构时对于所谓时间复杂度完全摸不着头脑，虽然凭着绝佳的短期记忆力在中国式考试中拿到高分，但在实际程序设计开发中一无所用，故借此机会重学这方面知识。本书对时间复杂度，即大O阶的推导讲解十分细致，很容易就将“多年顽疾”解决。 由此管窥此书，其他方面知识点也讲得非常清楚，附有大量插图，更是适合对大段文字提不起兴趣的朋友。 1.6《算法神探》 作者很努力把基础的算法写的有趣，作为入门还是不错的。我看的时候以为是数据分析相关的书，但是里面说的是代码基础算法相关的，但是还是很顺畅地看下去了。故事像是小學時看的 1.7《算法帝国》 作者极富洞察力！配合，随机漫步的傻瓜或者反脆弱 一起阅读体验更全面。看得出来作者为了完成这本高质量的书做足了功课，刚看完《冯诺依曼传》就看这本，简直是看到了冯诺依曼的远见在今天的现实版本，上世纪20、30年代凯恩斯就预言将来人类会“技术性失业”，他只是提早了90年，算法已经完全占据了世界，甚至将来会主宰人类的命运 看了就该好好思考一下自己的命运了。 1.8《算法设计与分析基础第3版》 对算法做了一个很新颖的划分，可以看到它和我们经常看的算法书的知识点划分很不一样。作者得归类很不错。对一些常用思想做了分类。比如作者对分治做了几个分类。纯思维层面的切入分析，而不像以前的分为一般算法和图论那样子。书中有不错的习题。思想描述有一定的思维引导性质。 二.进阶系列推荐理由：在基本入门算法书的调教和领悟下，渐渐懂得一些基础算法是什么，现在就是进阶系列可以参阅，力荐《算法导论》《编程原本》，经典款不解释，当然这些书最好是在入门后再看合适，还有王晓东那本算法书也很不错，有几个版本，可以挑选看还附有课后答案。 2.1《算法导论英文版第三版》 2.1《算法导论中文版》 2.2《算法 (第4版)》 2.3《数据结构与算法 Java版》 2.4《Algorithms算法概论中文版》 2.5《算法心得-高效算法的奥秘(原书第2版)》 2.6《计算机程序设计艺术 第1卷：基本算法（第三版）高清中文版》 2.7《计算机程序设计艺术 第2卷：半数值算法（第三版）高清中文版》 2.8《计算机程序设计艺术 第3卷：排序与查找（第二版）高清中文版》 2.9《数据结构（C语言版）-严蔚敏 吴伟民, 清华大学出版社, 2007》 2.9《计算机算法设计与分析 第4版 (王晓东) 课后答案[1-9章]》2.9《计算机算法设计与分析(王晓东)(第三版)》2.9《计算机算法设计与分析(王晓东)(第二版)》2.9《计算机算法设计与分析(第三版)课后习题答案详解》2.10《Java数据结构和算法(第二版)》 2.11《编程原本》 2.12《算法设计手册第2版 中文版330页》2.13《JavaScrit数据结构与算法（第2版）》2.14《数据结构与算法分析：C语言描述（原书第2版）》 2.15《数据结构与算法Python语言描述裘宗燕编著北京：机械工业出版》 三.算法题系列推荐理由：一些题海讲解具体的算法思想应用在题目上是怎么求解的，想刷题的可以看看结合各大OJ+leetCode一起学习。多刷题总不会错。 3.1《挑战程序设计竞赛(第2版)》 3.2《算法艺术与信息学竞赛(清华大学出版社)》 3.3《算法谜题》 3.4《编程高手箴言》四.实用工作系列推荐理由：在面试和工作中经常要用到的算法讲解，以及一些过来人工程师的心血总结，建议在面试前翻看，提升思维广度，外加一些实操。 4.1《编程之法 面试和算法心得》 4.2《程序员代码面试指南 IT名企算法与数据结构题目最优解 》 4.3《算法Ⅰ-Ⅳ(C++ 实现)–基础、数据结构、排序和搜索(第三版)》 4.4《程序员实用算法》 4.5《编程珠玑（第2版）》 4.6《编程之美》 4.7《程序调试思想与实践》 4.8《[改变未来的九大算法]管策》 4.9《排序算法汇总》4.10《算法与数据结构-实用算法基础教程》 五.算法奇门遁甲系列推荐理由：包括一些可能在图形学，游戏设计，数据挖掘方面的算法书，偏冷门，乃大佬可以赏读的系列书籍 5.1《matlab数学建模算法全收录 799页 47M 超清书签版》5.2《常用数据挖掘算法总结及ython实现》5.3《机器学习十大算法》5.4《计算机程序设计艺术 The Art o Comuter rogramming 第2卷（第3版）英文版》5.5《算法百科 Encycloeia o Algorithms》5.6《智能Web算法(中文版)》5.7《现代计算机常用数据结构与算法》5.8《数据挖掘原理与算法》5.9《计算几何–算法与应用(中文第三版)》5.10《数值最优化算法（numerical otimization）》5.11《计算机图形学原理及算法教程(Visual C++版)-和青芳 清华大学》5.12《算法概论（Algorithm)》5.13《数据结构教程电子版 》5.14《图论中的常用经典算法》 总结：天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 附①【Java】学习之路吐血整理技术书从入门到进阶最全50+本（珍藏版)：https://pymlovelyq.github.io/posts/ace53344/②【算法数据结构+acm】从入门到进阶吐血整理书单50+本（珍藏版)：https://pymlovelyq.github.io/posts/32a7f0eb/③【数据库】从入门到进阶必读18本技术书籍网盘吐血整理网盘(珍藏版):https://pymlovelyq.github.io/posts/ad3ee381/④【Web前端】书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍&gt;藏版）：https://pymlovelyq.github.io/posts/4957c3df/⑤【python】书最全已整理好（从入门到进阶）(珍藏版)：https://pymlovelyq.github.io/posts/f62e09cf/⑥【机器学习】+python整理技术书（从入门到进阶已经整理好）（珍藏版）：https://pymlovelyq.github.io/posts/e7071c91/⑦【C语言】推荐书籍从入门到进阶带你走上大牛之路（珍藏版）：https://pymlovelyq.github.io/posts/33303225/⑧【安卓】入门到进阶推荐书籍整理pdf书单整理（珍藏版）：https://pymlovelyq.github.io/posts/a25a10d/⑨【架构师】之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)：https://pymlovelyq.github.io/posts/e140888d/⑩【C++】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/77edf265/⑪【ios】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/66dfe877/]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>C语言</tag>
        <tag>C++</tag>
        <tag>算法</tag>
        <tag>面试</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[四.Web前端书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍藏版）]]></title>
    <url>%2Fposts%2F4957c3df%2F</url>
    <content type="text"><![CDATA[极客侠网站导航（全部书单资源导航页）：https://pymlovelyq.github.io/archives/ 前言：技术书阅读方法论总结一.速读一遍（最好在1~2天内完成）人的大脑记忆力有限，在一天内快速看完一本书会在大脑里留下深刻印象，对于之后复习以及总结都会有特别好的作用。 对于每一章的知识，先阅读标题，弄懂大概讲的是什么主题，再去快速看一遍，不懂也没有关系，但是一定要在不懂的地方做个记号，什么记号无所谓，但是要让自己后面再看的时候有个提醒的作用，看看第二次看有没有懂了些。 二.精读一遍（在2周内看完）有了前面速读的感觉，第二次看会有慢慢深刻了思想和意识的作用，具体为什么不要问我，去问30年后的神经大脑专家，现在人类可能还没有总结出为什么大脑对记忆的完全方法论，但是，就像我们专业程序员，打代码都是先实践，然后就渐渐懂了过程，慢慢懂了原理，所以第二遍读的时候稍微慢下来，2周内搞定。记住一句话：没看完一个章节后，总结一下这个章节讲了啥。很关键。 三.实践（在整个过程中都要）实践的时候，要注意不用都去实践，最好看着书，敲下代码，把重点的内容敲一遍有个肌肉记忆就很不错了。 以及到自己做过的项目中去把每个有涉及的原理的代码，研究一遍，就可以了 前言：作为一名前端开发人员，如果你告诉我你没有看过任何关于前端的书籍，那么我完全可以认为你不是一名合格的前端开发工程师。为什么我要以“看书”来衡量合格前端的标准？因为前端作为一个特殊的极具变化与开拓性的工种，没有较强的自我学习与思考能力，很难在这激烈又纷杂的环境里存活而不被淘汰，而“看书”则是最基本的自我提升与补充知识的途径。书中自有黄金屋。不管你是想涉猎前端抑或进行系统性的学习，我都推荐大家阅读前端的相关书籍。 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 资源图示（下载链接如上）： 以下是每本书的推荐语，清楚自己缺的是什么，就下定决心去补吧，一个好工作意味着高收入，投资自己的时间换来更宝贵的东西。 一.HTML系列书籍从入门到进阶系列1.《HTML5 揭秘》 是知名的《HTML5:up and running》的中文译本，很详细的介绍了HTML5的最新技术，如果你经常看Dive into HTML 5这个网站，肯定很了解这本书了。 算是入门款书籍，不枯燥，技术层面一般，适合菜鸟看，好在对格局有一定见解。当然如果一丁点编程知识都没有，也需要在阅读的时候多补充一下，非常推荐。 2.《响应式Web设计:HTML5和CSS3实战》BenFrain (作者), 王永强 (译者) 全书主要是带领读者做一个小网页来写的，其实响应式的东西讲得比较少，大半内容是介绍H5和css3的基础知识。如果同时想了解H5和css3和响应式设计入门，这本书不错。 3.《疯狂HTML 5/CSS3/JavaScript讲义》 李刚 (作者) 简介：这是一本全面介绍HTML 5、CSS 3和JavaScript前端开发技术的图书，系统地介绍了HTML 5常用的元素和属性、HTML5的表单元素和属性、HTML 5的绘图支持、HTML5的多媒体支持、CSS 3的功能和用法、最前沿的变形与动画功能等。除此之外，《疯狂HTML 5/CSS 3/JavaScript讲义》还系统地介绍了JavaScript编程知识，包括JavaScript基本语法、DOM编程，以及HTML 5新增的本地存储、离线应用、JavaScript多线程、客户端通信支持、WebSocket编程等。 4.《HTML5触摸界面设计与开发》 伍兹 (StephenWoods) (作者), 覃介右 谷岳 (译者） 简介：《HTML5触摸界面设计与开发》专注于触摸界面的开发，内容的结构和优化网站的思路大概一致。上半部分涵盖了能使各类网站，特别是移动网站变快的基本概念。书的后半部分是专门讲触摸界面的，特别是尽可能地让它们更平稳和快速。本书适合具有一定经验的Web开发者阅读参考。 5.《HTML5高级程序设计》 《HTML5 高级程序设计》是《Pro HTML5 Programming》的中文译本，写的相对比较深入，如果你对HTML5有较多了解，可以选择这本书。这本书适合有丰富编程经验的Web应用开发者。书中没有互联网发展基础知识的介绍。但是书中有许多现成的资源可以加快学习Web编程原理。当然，对于程序的的书跟平常的名著还不一样，因为自身经验不同，看法不同，需求不同，对于书的评价也不同。 二.CSS系列书籍从入门都进阶系列1.《HTML &amp; CSS设计与构建网站》 此书让我们知道，网页语言的书不只有呆板与枯燥，也可以赏心悦目，舒适的色彩搭配，恰到好处的图文编排！连插图都那么舒服。 除了书的装订不好以外（出版社为了赚钱呀，太耐糙了销量就小了），内容牛逼！给我们查漏补缺做工具书再适合不过了，介绍了新的HTML 5和CSS 3还有网站的设计以及网站的优化，虽然不多，也涉猎到了，更新很快，要知道，互联网的发展是一日千里。 如果没猜错，我估计作者是个MM，哈哈哈。 2.《CSS权威指南 （第3版）》 2000年时候的书，本来以为内容会比较旧，读了才发现内容全、系统，比现在网上各种版本的css教程之类要好的多，事实上好多都是从这本书摘出来的Eric A.Meyer，牛人，书里关于css的教程语言表述很清楚，章节合理，主要讲css1及css2中的布局、定位值得看，以前想看，正好在学校的图书馆找到，看完说不定买本放着，的确不错。 3.《精通CSS（第2版）-高级Web标准解决方案》 本书汇集了最有用的CSS技术，介绍了CSS的基本概念和最佳实践，结合实例探讨了图像、链接和列表的操纵，还有表单设计、数据表格设计、纯CSS布局等核心CSS技术。 4.《Eric Meyer 谈 CSS(卷2)》 这本书已一个又一个项目为基础，详细的展示了如何书写规范的样式，文章末尾已一个CSS禅意花园的项目为结尾，并告诉制作者，要做到纯粹的样式与结构相分离式不可能的。 推荐页面制作者阅读者本经典之作。 5.《CSS禅意花园》 第一次看有点糊里糊涂的，所以有些方面理解的模模糊糊。在这次看的过程中慢慢的理解了作者的一些意图，属于越看越有感觉的一本书。类似读中国古诗一样，越读越有兴趣，对自己网站页面的架构有很深的推动。 三.JavaScript从入门到进阶系列就是有一定的基础(比如最常见的HTML标签及其属性、事件、方法；最常见的CSS属性；基础的JavaScript编程能力)，能够完成一些简单的WEB前端需求。 1.推荐：《JavaScript Dom编程艺术》 理由：此书绝对是入门的好书，本人也是在接触JS一段时间后才看的这本书。此书从JS的历史 – JS基础语法知识 – DOM介绍和简单的使用。现在这本书已经出了第二版，需要的朋友直接第二版就行。 评价：简洁，实用，详细，易懂，书不厚，相信很快就能看完。 算是很好的经典入门书了，贯穿一个实例，把JavaScript的优点表现的淋漓尽致，非常强大。 2.推荐：《JavaScript权威指南(第5版)》 理由：非常强大(这名字可不是白起)，其实说起来也惭愧，本人至今都没有买过这本书，最开始是因为 这个书实在是小贵，只好借朋友的看，不过也就看了个周末。网上关于此书的评价很多，意思大概都是说这书就是一个JS的文档手册，如果你有闲钱，并且习惯翻 书查询，那么就来一本吧。顺便提醒一句，这本书的第六版英文版已经出来了。 本人以前的DEV leader兼恩师这么说过：“初级开发人员的标志就是需要在中级和高级开发的指导下完成工作”。首先不要苛责代码的对错严谨，毕竟每个程序员都有这样的一个过程，就是这个级别的特征。 3.推荐：《JavaScript高级程序设计》(第三版) 理由：这本书的作者是 Nicholas C.Zakas ,博客地址是 http://www.nczonline.net/ ,大家可以去多关注，雅虎的前端工程师，是YUI的代码贡献者，可想而知这本书得含金量，他出的书都广受好评。这本书已经出了第二版，而且与第一版相比内 容更新很大，直接第二版就行。不要被书名的“高级”唬住，只要有JS基础语法知识和DOM基础知识就行，而且本书开始阶段还是介绍JS和DOM的语法知 识。有一定JavaScript的基础可以看看，不过没基础也可以看看，wrox经典书籍。 评论：重点推荐一下第五章(类型),第六章(OOP),第七章(匿名),多看几遍,至少要完全看明白，能为以后进阶打好基础，个人感觉这几章是本书的 精华所在。这本书在入门的时候看节奏会快了一些，所以不建议初学者看，可是相对于我一会要介绍的书又算基础一点，所以建议先阅读完这本书，对浏览器兼容和 语法知识有一定了解之后再往下阅读。 4.推荐：《高性能JavaScript》《JavaScript语言精髓与编程实践》 理由：本人先看的是《高性能JS》，这本书还是 Nicholas C.Zakas 所著，经典之作，书中大量举例了各种不同写法的JavaScript在浏览器中的性能情况，对规范JavaScript代码和提升性能有很好的帮助，最后 提到了很多工具和性能测试的方法，都是灰常灰常有实际作用的，看得出作者很厚道(好吧,偶承认了,偶是他的粉丝)^_^,记忆最深的一句话:”如果 JavaScript 执行了几秒钟,那么很可能是你做错了什么”;《语言精髓》和《高性能》有少部分关键知识都重复提到了，可是为什么要推荐这本书，因为本书对JS语言本质的描述太棒了，这是一本介绍 JavaScript语言本质的权威书籍，从 “对象”，“函数”，“继承”，“数组”等等多个重要知识着手。我补一句话 – 本书需要反复阅读。 评论：都是好书，都很薄，而且所说的内容只要有基础都不难。相信读完之后会对JS又有新的认识，且对以后的代码规范和浏览器差异性等高级问题有了新的认识，如果读完之后会有种被灌顶的感觉，那么恭喜你，你离中级不远了。作为Orelly唯一一本我确实认可的javascript相关的书。 他摒弃了Orelly系列所有我不喜欢的特点：老外的聊天说教式阅读体验，样例不够丰富，排版单一，破事水等。他的优点如下： 情景丰富，基本涉及所有js性能优化的场景。还会给出不同场景的实际测试数据，真实可信。我们在阅读这些场景实例的同时也丰富了自己js的使用经验。 给出了很多看似”旁门左道”的解决方案，而这些冷门的解决方案恰恰是有些人死活百度不到的真正能解决问题的最优解。 在说问题的同时说原理，深入浅出，游刃有余。所以这本书不仅仅是一本介绍js性能相关的书，而是一本涉及浏览器原理，js解析原理，用户体验等知识的javascript最佳注解。阅读建议：建议和高程三一起看，可以算是高程三阅读的最佳伴侣。高程三告诉你“他叫什么，他什么样”，这本书就告诉你“他为什么”，“他该怎样”。所以，当别人还在为某些问题绞尽脑汁的时候，你已经从起点上干翻他们了。 5.推荐：《深入浅出JavaScript》 理由：Ajax程序员必备 里面讲自己开发的一个JavaScript框架。 6. 推荐《学习Javascript数据结构与算法》 理由：这本书相对是一本冷门书。为什么我会推荐他，是因为他能解决每个半路出家的js程序员都曾思考过的一些问题： 我们的数组Array这么强大，要栈Stack，队列Queue这些功能少，半半拉拉的东西干什么呢？ 我们学的数据结构搞来搞去好像也就那些玩意，为什么被大家这么推崇，还要分门别类讨论呢？所以这本书只是为何告诉你上面这些问题的答案： 栈和队列本来就没有Array功能强。没有Stack和Queue类只是因为ES5不去实现它而已。作为一种相互之间存在一种或多种特定关系的数据集合，其存在意义是不应该被其功能强大与否来决定的。 数据结构和编程语言无关。语言死了，他们会在下一门语言里重生。哪怕计算机死了，他们都会在下一个概念体里重生。阅读建议：跟着书本把这里面的结构全部敲一遍，快的话一天就能搞定。从此你便再不怕惧怕js相关的简单数据结构问题。但是，遇上高级的树，图等问题该跪还是要跪。因为这本书虎头蛇尾，后面的高级点的数据结构介绍的不够深。适合经常反思“它从哪里来，要到哪里去？”的js程序员，或后悔以前数据结构没好好学的前端同学。还是本人以前的DEV leader兼恩师这么说过：“中级开发人员的标志就是在高级开发或架构师较少的指导下高质量的完成工作，并对产品或项目有自己的想法与理解”。 7.强烈推荐：《JavaScript DOM高级程序设计》 理由：此书灰常犀利，本人一共看了近半年的时间，已反复阅读多次。说实话，这本书的翻译一般，代码也有少许错误，可是这不影响这本书的强大，通过学习 本书，可以理解一个JS的库如何产生，自己动手写一个简单的自己的JS库，如果你打算研究其他的JS库或者正在研究其他的JS库，那么这本书会使你的理解 达到新的高度，进阶高级必读，写库必读。 评论：异常强大的一本JS巨作，此书不薄，强烈推荐。 8.强烈推荐：《JavaScript设计模式与开发实践》 理由：我认为腾讯AlloyTeam的这本书对我帮助媲美高程三。那时候我恰好换公司，从原来的开发方式切换成另一种完全不同的开发方式，让我很不适应。这本书及时的蹦出来，他拿实际的应用场景举例，告诉你不同js项目里如何共通设计模式，还极其详细的介绍了函数的高级用法，能让你对js高阶函数的认知上升一个台阶。难能可贵的是他还拿java作为静态语言的类比。从语言统一高度来给你分析这些问题。和上本介绍数据结构的书一样，这本书有的放矢，能完美的解决对js设计模式有疑问的同学的实际问题。他比上本书更深刻，更易读，也更贴近实践。评论：书不厚，可真的是内容丰富且高深，强烈建议购买。 阅读建议： 这是本适合反复阅读的书籍。 如果你的思路能根据应用场景自动切换到最适合的设计模式，说明你已吃透这本书了。 9.推荐：《高性能网站建设指南》《高性能网站建设进阶指南》 理由：在读完前几本书之后我们对前端的性能和自己的代码的效率已经达到相当的高度了，然后我们在接触一些前端工程师的一些精髓。本书对HTTP请求，CDN，内容缓存和一些web开发中常见问题进行讲解。 评论：书都不厚，可是说的都是比较实用的东西，可是用不用的上还得看个人和项目需要了。 10.推荐：《精通JavaScript》 理由：把JavaScript讲得很面向对象。很现代！ 图灵教育的出版引进书籍有很多都是经典书籍，非常好。 11. 推荐：《你不知道的JavaScript》 大名鼎鼎的Github开源的书籍。为了他的名气我也得买一本实体书来拜读下。这本是上卷，只涉及作用域和闭包，this和对象原型两部分。不过其深入程度是其他js书籍难以企及的。可以说，这已经是大部分前端程序员对js语法可以深入了解的最底层了，再往下就直面编译原理了。 阅读建议： 用于提升自己的js语法的理解等级。 对于进入工作第二年的想深入理解js语法的同学来说特别有效。 四.HTTP网络系列从入门到进阶系列1.《图解HTTP和图解TCP/IP》 相较于前两本大厚书，这两本书更加亲民，小白可以买来看看，还是很适合入门的。 2.《计算机网络：自顶向下》 这本从应用层讲到物理层，感觉这种方式学起来更轻松，我比较推荐小白看这本。 3.《HTTP权威指南》 内容全面，涉及http及其周边方方面面，http前世今生，http响应机制，http连接过程，http安全认证，http编码，http页面上传等等。读完对http有一个全面的认识，尤其是最近回头重读了安全部分内容，感觉收获不小：cookie有两个版本，由服务器set，在客户端每次请求时附加，作为认证/追踪凭证，cookie可配置限期和作用域；帐号认证有base64方式和hash方式，都存在安全隐患；https是王道，https = ssl + http。 五.AJAX系列从入门到进阶推荐1.《Ajax基础教程》（亚马逊计算机榜首图书，国内第1本Ajax图书） （美）阿斯利森，（美）舒塔 著，金灵 AJAX必备图书之一、国内发行的第一本AJAX图书，也是目前最好的AJAX入门书，如果是AJAX新手，此书是最好的入门图书。本书基本包括了实现Ajax需要了解的大部分技术与工具，让您在一开始就对AJAX就有一个整体把握与全局观念。 2.《Ajax实战》（Ajax in action中文版） AJAX必备的图书之二：人称“AJAX圣经”，AJAX的进阶最佳。特点就是足够深入，仅此一点，已经足够。 进阶看着一本能看懂就相当不错了。 六.vue.js从入门到进阶系列1.《vue.js权威指南》 一般，入门看看就好。其中有部分是引用网上的，有点坑，看看电子版，对vue.js提升还是有点帮助的。大佬就不推荐了。 2.《vue.js实战》 由雨溪大佬的书，前端人不看会后悔的，特别是Vue.js这系列。 七.正则表达式系列1.《正则表达式必知必会》 在该书的序言中作者已经提到过一些 大部头的正则表达式的书，而且作者也声明了：该书比较适合那些不太了解正则表达式而又想尽快入门能够解决一些实践中遇到的小问题的朋友们。我最近在看这本书，因为以前有一点半点的学习过正则表达式，感觉正则表达式语法虽然不算难，但是要真正用好还是有点难度的。需要大量的实践经验。这本书的正文内容大概十章左右，前五章都算一些基础知识，也是我以前就知道的，后面的几章也许你也知道，但是个人认为算是一些稍微高级点的内容。所以我想，如果你还不怎么精通正则表达式，在工作中使用起来比较费力的话，这本书倒也挺适合的。查漏补缺吧。学前端都适合看看。 2.《精通正则表达式》 我强烈推荐这本书，我看了之后对其的运行过程有了深入地了解，现在对一般的问题，运行的效率都有一定的提高。这个本买来很长时间了 感觉太厚 就一直没有看，这点时间突然对正则表达式感兴趣了 就看了 前几张的内容很值得看 尤其是中间几章，我是彻底了解了正则的工作原理 以前工作中出现的一些情况原来想不明白，现在也就觉得应该是这样子了 建议大家静下心来看这本书。 总结：天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 一.HTML系列书籍从入门到进阶系列1.《HTML5 揭秘》2.《响应式Web设计:HTML5和CSS3实战》3.《疯狂HTML 5/CSS3/JavaScript讲义》 4.《HTML5触摸界面设计与开发》 5.《HTML5高级程序设计》二.CSS系列书籍从入门都进阶系列1.《HTML &amp; CSS设计与构建网站》2.《CSS权威指南 （第3版）》3.《精通CSS（第2版）-高级Web标准解决方案》4.《Eric Meyer 谈 CSS(卷2)》5.《CSS禅意花园》三.JavaScript从入门到进阶系列1.《JavaScript Dom编程艺术》2.《JavaScript权威指南(第5版)》3.《JavaScript高级程序设计》(第三版)4.《高性能JavaScript》《JavaScript语言精髓与编程实践》5.《深入浅出JavaScript》6.《学习Javascript数据结构与算法》7.《JavaScript DOM高级程序设计》8.《JavaScript设计模式与开发实践》9.《高性能网站建设指南》《高性能网站建设进阶指南》10.《精通JavaScript》11.《你不知道的JavaScript》四.HTTP网络系列从入门到进阶系列1.《图解HTTP和图解TCP/IP》2.《计算机网络：自顶向下》3.《HTTP权威指南》五.AJAX系列从入门到进阶推荐1.《Ajax基础教程》（亚马逊计算机榜首图书，国内第1本Ajax图书）2.《Ajax实战》（Ajax in action中文版）六.vue.js从入门到进阶系列1.《vue.js权威指南》2.《vue.js实战》七.正则表达式系列1.《正则表达式必知必会》2.《精通正则表达式》 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 附①【Java】学习之路吐血整理技术书从入门到进阶最全50+本（珍藏版)：https://pymlovelyq.github.io/posts/ace53344/②【算法数据结构+acm】从入门到进阶吐血整理书单50+本（珍藏版)：https://pymlovelyq.github.io/posts/32a7f0eb/③【数据库】从入门到进阶必读18本技术书籍网盘吐血整理网盘(珍藏版):https://pymlovelyq.github.io/posts/ad3ee381/④【Web前端】书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍&gt;藏版）：https://pymlovelyq.github.io/posts/4957c3df/⑤【python】书最全已整理好（从入门到进阶）(珍藏版)：https://pymlovelyq.github.io/posts/f62e09cf/⑥【机器学习】+python整理技术书（从入门到进阶已经整理好）（珍藏版）：https://pymlovelyq.github.io/posts/e7071c91/⑦【C语言】推荐书籍从入门到进阶带你走上大牛之路（珍藏版）：https://pymlovelyq.github.io/posts/33303225/⑧【安卓】入门到进阶推荐书籍整理pdf书单整理（珍藏版）：https://pymlovelyq.github.io/posts/a25a10d/⑨【架构师】之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)：https://pymlovelyq.github.io/posts/e140888d/⑩【C++】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/77edf265/⑪【ios】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/66dfe877/]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>前端</tag>
        <tag>HTML</tag>
        <tag>CSS</tag>
        <tag>JavaScript</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[六.机器学习和python学习之路吐血整理技术书从入门到进阶(珍藏版)]]></title>
    <url>%2Fposts%2Fe7071c91%2F</url>
    <content type="text"><![CDATA[极客侠网站导航（全部书单资源导航页）：https://pymlovelyq.github.io/archives/ “机器学习／深度学习并不需要很多数学基础！”也许你在不同的地方听过不少类似这样的说法。对于鼓励数学基础不好的同学入坑机器学习来说，这句话是挺不错的。不过，机器学习理论是与统计学、概率论、计算机科学、算法等方面交叉的领域，对这些技术有一个全面的数学理解对理解算法的内部工作机制、获取好的结果是有必要的。机器学习确实需要对一些数学领域有深入理解，缺乏必要的数学知识，很可能在更深入的学习中不断遇到挫折，甚至导致放弃。说的很多小伙伴恐怕心都凉了一半，或者已经开始打退堂鼓了。不要紧，山人自有妙法。下面就给大家分享一下，主要是一些资源（书籍或者视频课程）。人工智能（机器学习或数据挖掘等）中最最重要的数学就是线性代数与概率论（还有其他，但这两者比重最大）。 所以我找了个书单自学，电子书为主，顺便分享出来。使用电子书的形式是因为，个人偏好。即使我买了实体书，一旦找到了电子书，我马上就会把纸质书扔到床底下。如果侵犯了任何人的权益，烦请及时通知。 前言：技术书阅读方法论总结一.速读一遍（最好在1~2天内完成）人的大脑记忆力有限，在一天内快速看完一本书会在大脑里留下深刻印象，对于之后复习以及总结都会有特别好的作用。 对于每一章的知识，先阅读标题，弄懂大概讲的是什么主题，再去快速看一遍，不懂也没有关系，但是一定要在不懂的地方做个记号，什么记号无所谓，但是要让自己后面再看的时候有个提醒的作用，看看第二次看有没有懂了些。 二.精读一遍（在2周内看完）有了前面速读的感觉，第二次看会有慢慢深刻了思想和意识的作用，具体为什么不要问我，去问30年后的神经大脑专家，现在人类可能还没有总结出为什么大脑对记忆的完全方法论，但是，就像我们专业程序员，打代码都是先实践，然后就渐渐懂了过程，慢慢懂了原理，所以第二遍读的时候稍微慢下来，2周内搞定。记住一句话：没看完一个章节后，总结一下这个章节讲了啥。很关键。 三.实践（在整个过程中都要）实践的时候，要注意不用都去实践，最好看着书，敲下代码，把重点的内容敲一遍有个肌肉记忆就很不错了。 以及到自己做过的项目中去把每个有涉及的原理的代码，研究一遍，就可以了 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 一. 数学基础1.微积分：《微积分学教程》 （F.M.菲赫金哥尔茨）俄罗斯的数学书 2.线性代数：《Linear Algebra and Its Applications,Third Edition （David C.Lay）》讲得很实际，线性代数最重要的就是与实际应用相联系才能够理解其意义 3.概率与统计：《概率论与数理统计 （陈希孺）》或《概率论与数理统计（盛骤/谢式千/潘承毅）》这两本书都很不错![3.1.png](https://i.loli.net/2018/10/27/5bd3d780336eb.png) 4.随机过程：《应用随机过程:概率模型导论 （Sheldon M. Ross）》这本书已经出到第10版了这四门是数学的基础，当然数学本身就是博大精深的。 二. 机器学习与数据挖掘（偏理论）1.《 统计学习方法 （李航）》 2.《统计学习基础 （Trevor Hastie, Robert Tibshirani, Jerome Friedman）》3.《Pattern Recognition and Machine Learning （Christopher Bishop）》4.《Introduction to Machine Learning （Ethem Alpaydin）》（《机器学习导论》）6.《Data Mining （韩家炜） 》7.《现代模式识别 （孙即祥） 》 个人觉得《统计学习方法》与《统计学习基础》这两本书是基础，后面的书内容相差不大，所以前两本书应该看，而入门的话，后面的书可以选1到2本精读，剩下的书可作参考。 三. 智能算法（偏应用）1.《Web智能算法 （Haralambos Marmanis, Dmitry Babenko）》2.《集体智慧编程 （Toby Segaran）》3.《推荐系统实践 （项亮）》 4.《数据之魅 （Pbilipp K.Janert）》这几本书均是从实践的角度讲解了机器学习中常用的算法，非常值得一看。有人推荐，学习机器学习的话可以先读《统计学习方法》和《统计学习基础》打底，这样就包含了大部分的算法，然后再深入研究某个算法。 四.机器学习入门级：1.《数学之美》；作者吴军大家都很熟悉。这本书主要的作用是引起了我对机器学习和自然语言处理的兴趣。里面以极为通俗的语言讲述了数学在这两个领域的应用。2.《Programming Collective Intelligence》（中译本《集体智慧编程》）；作者Toby Segaran也是《BeautifulData : The Stories Behind Elegant Data Solutions》（《数据之美：解密优雅数据解决方案背后的故事》）的作者。这本书最大的优势就是里面没有理论推导和复杂的数学公式，是很不错的入门书。目前中文版已经脱销，对于有志于这个领域的人来说，英文的pdf是个不错的选择，因为后面有很多经典书的翻译都较差，只能看英文版，不如从这个入手。还有，这本书适合于快速看完，因为据评论，看完一些经典的带有数学推导的书后会发现这本书什么都没讲，只是举了很多例子而已。3.《Algorithms of the Intelligent Web》（中译本《智能web算法》）；作者Haralambos Marmanis、Dmitry Babenko。这本书中的公式比《集体智慧编程》要略多一点，里面的例子多是互联网上的应用，看名字就知道。不足的地方在于里面的配套代码是BeanShell而不是python或其他。总起来说，这本书还是适合初学者，与上一本一样需要快速读完，如果读完上一本的话，这一本可以不必细看代码，了解算法主要思想就行了。4.《统计学习方法》；作者李航，是国内机器学习领域的几个大家之一，曾在MSRA任高级研究员，现在华为诺亚方舟实验室。书中写了十个算法，每个算法的介绍都很干脆，直接上公式，是彻头彻尾的“干货书”。每章末尾的参考文献也方便了想深入理解算法的童鞋直接查到经典论文；本书可以与上面两本书互为辅助阅读。5.《Machine Learning》（《机器学习》）；作者TomMitchell[2]是CMU的大师，有机器学习和半监督学习的网络课程视频。这本书是领域内翻译的较好的书籍，讲述的算法也比《统计学习方法》的范围要大很多。据评论这本书主要在于启发，讲述公式为什么成立而不是推导；不足的地方在于出版年限较早，时效性不如PRML。但有些基础的经典还是不会过时的，所以这本书现在几乎是机器学习的必读书目。那么Mitchell的&lt;机器学习&gt;是经典的入门之作。当然，因为年代久远，很多新的模型都没有涉及到，但不影响他的经典性——入门级。6.《机器学习实战》对于程序员，想快速了解模型流程和优缺点的，甚至是实现模型的，那么是我比较推荐的，现在已经有中文版了&lt;机器学习实战&gt;。这本书，提到了很多常见的模型，开始就是模型背景简介，之后是模型优缺点和应用场景、在接着算法实现和案例。而且，在书的最后，提及了一些比较切合时代的话题——大数据下机器学习。《机器学习基础》对于想从事机器学习的入门人员，比较推荐一本有中文版的&lt;机器学习基础&gt;(Simon Rogers的，英国格拉斯哥大学计算机科学学院讲师)，这本书适合高年级本科生和研究生。从理论的角度，推导了各个算法，以及探究了各个模型的特性等。涉及数学和矩阵的地方，都有详细的参照。适合高端点的入门，看这本书，可以体会一下自己的数学和矩阵，有种必须要加强的感觉。 7.《Mining of Massive Datasets》（《大数据》）；作者Anand Rajaraman[3]、Jeffrey David Ullman，Anand是Stanford的PhD。这本书介绍了很多算法，也介绍了这些算法在数据规模比较大的时候的变形。但是限于篇幅，每种算法都没有展开讲的感觉，如果想深入了解需要查其他的资料，不过这样的话对算法进行了解也足够了。还有一点不足的地方就是本书原文和翻译都有许多错误，勘误表比较长，读者要用心了。8.《Data Mining: Practical Machine Learning Tools and Techniques》（《数据挖掘：实用机器学习技术》）；作者Ian H. Witten 、Eibe Frank是weka的作者、新西兰怀卡托大学教授。他们的《ManagingGigabytes》[4]也是信息检索方面的经典书籍。这本书最大的特点是对weka的使用进行了介绍，但是其理论部分太单薄，作为入门书籍还可，但是，经典的入门书籍如《集体智慧编程》、《智能web算法》已经很经典，学习的话不宜读太多的入门书籍，建议只看一些上述两本书没讲到的算法。五.机器学习深入级：1.《Pattern Classification》（《模式分类》第二版）；作者Richard O. Duda[5]、Peter E. Hart、David。模式识别的奠基之作，但对最近呈主导地位的较好的方法SVM、Boosting方法没有介绍，被评“挂一漏万之嫌”。2.《The Elements of Statistical Learning : Data Mining, Inference, andPrediction》，（《统计学习基础：数据挖掘、推理与预测》第二版）；作者RobertTibshirani、Trevor Hastie、Jerome Friedman。“这本书的作者是Boosting方法最活跃的几个研究人员，发明的Gradient Boosting提出了理解Boosting方法的新角度，极大扩展了Boosting方法的应用范围。这本书对当前最为流行的方法有比较全面深入的介绍，对工程人员参考价值也许要更大一点。另一方面，它不仅总结了已经成熟了的一些技术，而且对尚在发展中的一些议题也有简明扼要的论述。让读者充分体会到机器学习是一个仍然非常活跃的研究领域，应该会让学术研究人员也有常读常新的感受。”[7]3. 机器学习与数据挖掘（偏理论） 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 总结：天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 附①【Java】学习之路吐血整理技术书从入门到进阶最全50+本（珍藏版)：https://pymlovelyq.github.io/posts/ace53344/②【算法数据结构+acm】从入门到进阶吐血整理书单50+本（珍藏版)：https://pymlovelyq.github.io/posts/32a7f0eb/③【数据库】从入门到进阶必读18本技术书籍网盘吐血整理网盘(珍藏版):https://pymlovelyq.github.io/posts/ad3ee381/④【Web前端】书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍&gt;藏版）：https://pymlovelyq.github.io/posts/4957c3df/⑤【python】书最全已整理好（从入门到进阶）(珍藏版)：https://pymlovelyq.github.io/posts/f62e09cf/⑥【机器学习】+python整理技术书（从入门到进阶已经整理好）（珍藏版）：https://pymlovelyq.github.io/posts/e7071c91/⑦【C语言】推荐书籍从入门到进阶带你走上大牛之路（珍藏版）：https://pymlovelyq.github.io/posts/33303225/⑧【安卓】入门到进阶推荐书籍整理pdf书单整理（珍藏版）：https://pymlovelyq.github.io/posts/a25a10d/⑨【架构师】之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)：https://pymlovelyq.github.io/posts/e140888d/⑩【C++】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/77edf265/]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>算法</tag>
        <tag>面试</tag>
        <tag>python</tag>
        <tag>机器学习</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[九.架构师之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)]]></title>
    <url>%2Fposts%2Fe140888d%2F</url>
    <content type="text"><![CDATA[极客侠网站导航（全部书单资源导航页）：https://pymlovelyq.github.io/archives/ 互联网行业的特点是变化。若要提高互联网开发的技能，就必须跟上技术发展的步伐。埋首醉心于项目开发与实战，固然能够锤炼自己的开发技巧，却难免受限于经验与学识。世界上并不存在速成的终南捷径，但阅读好的技术书籍，尤其是阅读大师们的经典著作，总能收到事半功倍之效。一位优秀的程序员，或许就是一名好的阅读者。好的阅读者，总是知道如何选择好的书籍。 以下就给想要成为架构师的程序猿们推荐从事技术生涯这一辈子都要花时间去看的书单，以及一份技术书阅读方法论总结： 前言：技术书阅读方法论总结一.速读一遍（最好在1~2天内完成）人的大脑记忆力有限，在一天内快速看完一本书会在大脑里留下深刻印象，对于之后复习以及总结都会有特别好的作用。 对于每一章的知识，先阅读标题，弄懂大概讲的是什么主题，再去快速看一遍，不懂也没有关系，但是一定要在不懂的地方做个记号，什么记号无所谓，但是要让自己后面再看的时候有个提醒的作用，看看第二次看有没有懂了些。 二.精读一遍（在2周内看完）有了前面速读的感觉，第二次看会有慢慢深刻了思想和意识的作用，具体为什么不要问我，去问30年后的神经大脑专家，现在人类可能还没有总结出为什么大脑对记忆的完全方法论，但是，就像我们专业程序员，打代码都是先实践，然后就渐渐懂了过程，慢慢懂了原理，所以第二遍读的时候稍微慢下来，2周内搞定。记住一句话：没看完一个章节后，总结一下这个章节讲了啥。很关键。 三.实践（在整个过程中都要）实践的时候，要注意不用都去实践，最好看着书，敲下代码，把重点的内容敲一遍有个肌肉记忆就很不错了。这个过程最好结合”费曼思想”进行思考，反思，总结。当然如果能把刚刚学习到的内容结合现在做的项目‘注入’，即即学即用，效果甚佳。 以及到自己做过的项目中去把每个有涉及的原理的代码，研究一遍，就可以了 网盘下载链接 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 资源图示： 汇总目录：一.编程实践系列：1.《代码整洁之道》2.《卓有成效的程序员》3.《程序员的职业素养》4.《重构与模式》5.《代码大全》6.《实现模式》7.《程序员修炼之道》8.《高性能MySQL》9.《修改代码的艺术》10.《计算机程序的构造和解释》11.《重构：改善既有代码的设计(中文版)》12.《调试九法——软硬件错误的排查之道》13.《算法设计与分析基础第3版》14.《实用J2EE设计模式编程指南》15.《编写可读代码的艺术－完整版（带书签）》16.《大话设计模式(带目录完整版)》17.《程序设计方法》18.《七周七语言：理解多种编程范型》19.《程序设计语言——实践之路》20.《程序设计实践中文版》21.《编码：隐匿在计算机软硬件背后的语言（美）佩措尔德》22.《编程原本》二.架构与设计系列：1.《敏捷软件开发：原则、实践与模式》2.《深入浅出设计模式》3.《Unix编程艺术》4.《企业应用架构模式》5.《领域驱动设计.软件核心复杂性应对之道.软件核心复杂性应对之道》6.《企业集成模式：设计、构建及部署消息传递解决方案》7.《架构之美》8.《面向模式的软件架构_卷5_模式与模式语言》9.《亿级流量网站架构核心技术 跟开涛学搭建高可用高并发系统》10.《领域特定语言》11.《元素模式》12.《设计模式：可复用面向对象软件的基础》13.《设计模式：Java语言中的应用》14.《编程珠玑（第2版）（第一部）》15.《编程珠玑(编程珠玑续篇)（第二部）》16.《淘宝技术这十年 完整版》17.《软件架构的艺术》（简称架构之美）18.《软件框架设计的艺术》19.《软件测试的艺术(原书第2版）》20.《HeadFirst设计模式》21.《编程语言实现模式》三.方法学系列：1.《用户故事与敏捷方法完整中文版》2.《金矿：精益管理 挖掘利润 （法）伯乐著》3.《[解析极限编程：拥抱变化（原书第2版）》4.《持续交付-发布可靠软件的系统方法完整版》5.《重构极限编程 XP的实践与反思》6.《系统化思维导论》7.《程序员的思维修炼：开发认知潜能的九堂课》8.《高效程序员的45个习惯：敏捷开发修炼之道》9.《禅与摩托车维修艺术 罗伯特·M·波西格》10.《人月神话》四.思想与领导力系列：1.《卓有成效的管理者》2.《你的灯亮着吗》3.《成为技术领导者》4.《第五项修炼》5.《思考快与慢》6.《麦肯锡方法》五.奇门遁甲系列：1.《软件调试的艺术》2.《世界是数字的.Brian.W.Kernighan》3.《极客与团队》4.《计算的本质：深入剖析程序和计算机》5.《计算机科学概论（原书第3版）》6.《计算机系统概论》7.《人件（原书第3版）》8.《深入理解计算机系统》六.互联网大佬奇迹传记系列：1.《史蒂夫·乔布斯传》2.《沃兹传：与苹果一起疯狂》3.《图灵的秘密 他的生平、思想及论文解读》4.《苹果首席设计师_乔纳森传》5.《雷军：人因梦想而伟大》6.《马云传》7.《企鹅凶猛：马化腾的中国功夫》8.《拒绝平庸 周鸿祎和他的创士记》9.《比尔盖茨全传》10.《阿桑奇自传》11.《马云：我的成功不是偶然，给年轻人的创业课.任雪峰》12.《编程人生_15位软件先驱访谈录》13.《史玉柱自述：我的营销心得》14.《一网打尽贝佐斯与亚马逊时代》15.《世界因你不同：李开复自传》16.《编程大师访谈录》17.《DOOM启世录》18.《奇思妙想：15位计算机天才及其重大发现》19.《孵化Twitter 从蛮荒到IPO的狂野旅程》想要成为架构师的程序员一生必读的书，分为以下四个部分：1.Coding Practice(编程实践系列)2.Architecture Design(架构与设计系列)3.Methodology(方法学系列)4.Thought Leadership(思想与领导力系列)5.奇门遁甲系列6.互联网大佬奇迹传记系列： 架构师一生必读书籍推荐理由：一.编程实践系列：1 《代码整洁之道》 《代码整洁之道》讲述了一系列行之有效的整洁代码操作实践。软件质量，不但依赖于架构及项目管理，而且与代码质量紧密相关。 这一点，无论是敏捷开发流派还是传统开发流派，都不得不承认。《代码整洁之道》提出一种观念：代码质量与其整洁度成正比。 干净的代码，既在质量上较为可靠，也为后期维护、升级奠定了良好基础。作为编程领域的佼佼者，这些实践在《代码整洁之道》中体现为一条条规则(或称“启示”)，并辅以来自现实项目的正、反两面的范例。只要遵循这些规则，就能编写出干净的代码，从而有效提升代码质量。 2 《卓有成效的程序员》 垂涎这本书很久，终于花了一天时间看完了。本书所介绍的最主要的不是工具和方法，而是思想，有助于我们提升工作效率的思想。 工具和方法是其次的，只要理解掌握这些思想，并在实际工作中运用到，就能够大大提升我们的工作效率了。 总的来说，这本书还是很优秀的，是一本「集大成」的书籍。里面很多想法和概念通过阅读其他书籍也能接触到，只不过在这本书里面，作者结合自己的亲身经验总结来介绍，更有助于理解这些想法。在我看来，整本书一直都在灌输着三个思想： 一、经典的还是好的 二、尽量把事情交给计算机来完成作者有句话我是很赞同的：只要做过一次的事情，以后很大程度要重复做。 三、选择最合适的，而不是追求最好的。 3 《程序员的职业素养》 Robert C.Martin的大名咱就不说啥了。这本书写的深入浅出，感觉像读一本小说，流畅自然，但自然而然的就学到了很多东西。结合工作经验，常有种“确实如此”的感觉。 该书尤其适合初入职场，试图成为“专业人员”的人。其中永远不要说“我试试”和有关测试的章节给我留下了深刻印象。 4 《重构与模式》 只是看了一半，因为其中每个例子都含有作者实践过的真实代码，非常适合我们跟着作者的思路去思考，运用设计模式进行重构，解决眼前存在的难题！ 5 《代码大全》 初见《代码大全》，还是该书的第一版，只从书名上看，还以为都是一些代码的示例。觉得还有很多的书需要读，这种实用主义的技巧书，可以先放一放，于是与之失之交臂。 及至后来，才发现原来被中文书名给骗了。只要将目录浏览一过，就会发现，这本书基本覆盖了软件构建的全过程，从需要分析、系统架构设计到具体的编码规范、编码技巧，程序员可以在其中找到所有想找到的内容。 而且每一个方面作者都进行了深入的探讨和详细的解说，同时也给出了想要更进一步学习的参考。可以说，这是一本对其出版之前的所有软件构建的知识的百科全书。 对于争论较多的方面，作者给出了较为合理、公允的折中方案，甚至在34章最后一节”汝当分离软件与信仰“，作者明确的阐述了这一思想。 这本书和《程序员修炼之道》一厚一薄，相映成趣，都是难得一见的好书，值得花时间和精心用心的阅读，并不时拿出来温习，可以肯定的是，每次翻开，必有收获！ 6 《实现模式》 这是一本关注程序细节并具有浓厚实战意义的书籍, 它主要是来告诉我们如何写出容易让人理解的代码. 如果非要在书名前加一个限定词的话, “java实现模式”可能更贴切一些, 因为里面的代码都是以java作为例子来说明的. 作者是junit的贡献者之一, 因此里面的很多例子都是从junit中来的. 这本书也解决了很多自己在实际开发中的一些抉择困惑. 是一本非常值得常看的书籍. 另外翻译的也非常不错, 不像有些书让人看了云里雾里的, 不知所云.本书按照方法, 行为, 类, 状态, 集合, 框架的顺序依次对相关的实现模式加以说明来阐述如何写出好的代码. 也是本书的重点, 集合主要是在讲java.util下的集合类的使用法则, 框架部分主要是框架的开发有自己的规则, 围绕兼容性, 扩展性方面在说事儿。 7 《程序员修炼之道》 很久以前买的这本书，忘记在哪里看到这部书的推荐了，有大牛很卖力的推荐，于是去买了一本。 坦白讲，那个时候自己是完完全全的菜鸟，从大学里出来，除了会编程啥也不懂，这本书在当时真的是指路明灯。 书中的道理很浅显，可是对于菜鸟却是至理名言。基本为你勾勒了一个成熟软件程序员专家所需要的所有特性。 我自觉地获益颇多，其中很多事情，要么在当时是自己没有想到的，要么是发生了，自己没有注意的等等。给我影响很大。当然，有些自以为是的”大牛”是鄙视这些的，因为看起来不够高深，随便吧，反正它讲的是从小工到专家，我是从小工过来的，那些凭空冒出来的“专家”不看也罢。 8 《高性能MySQL》 书很厚，内容非常全面，基本涵盖了所有使用中需要了解的基础和进阶知识，认真看完基本就没有知识死角了 书的语言风格和内容编写都非常好，没有废话，全书无任何尿点，每一节每一段话都很重要,作者们是mysql DBA届的大牛，经验和知识水平没得说，尤其让人如沐春风的是作者的一些谆谆教诲，大师风范跃然纸上国内tb大牛翻译的也很棒。 非常好的一本书，五星力荐，即使你不是DBA也值得一读。稍微美中不足的就是知识的深度上有所欠缺，很多知识点讲出来了，但是背后的原理却没有触及，当然这和本书偏向应用的定位有关 9 《修改代码的艺术》 这本书很薄，但是看起来还是很吃力，里面介绍了很多重构的知识，而且有很多c++的内容，有的地方也是似懂非懂的，如果了解设计模式和重构，就会轻松很多，可能艺术这东西，本身就不容易懂吧。 里面对单元测试的依赖性很强，其实还是一本不错的书，你完全可以领略到作者真的把代码的修改看成是一种艺术，软件工程师要做到匠人的地步也着实不容易。看得出写代码不是一件简单的事情，是需要经验的，不像国内这样，写代码是年轻人的事情，其实没有时间的锤炼是写不出好的代码来的，即使写出来也不能谈得上是艺术了。 希望将来再次翻起这本书时会有更多的领悟。 10 《计算机程序的构造和解释》 这是一本很有趣的书，任何对编程真正感兴趣的人都应该看看。它讲了程序结构的很多方面，但始终围绕着一个主题，那就是从各个层次上来减少计算的复杂度。 这和我读过的另外几本书核心是一样的，只是维度不同。比如《代码大全》厚厚的一本书讲的也是管理复杂，但是它针对的是软件工程这门工作该从哪些方面来提高生产效率，减少沟通和维护的成本，比如变量名该怎样起，函数该多长，注释该怎么写。 而这本书的出发点是各种编程问题，重点放在该如何分层以减少程序的复杂度，有点像是《Head First设计模式》，讨论的也是如何封装变化，针对接口编程等等，不过《SICP》里的问题难得多而已，类似算法一样很费脑筋。 11 《重构：改善既有代码的设计(中文版)》 Martin Fowler 的《重构-改善既有代码的设计》这本书，是我大学老师推荐给我的。 当时我在撰写代码过程中，发现当代码量到某个数量级时候（1000+行）， 就会逐渐失去对代码的控制能力。 这本书是2年前购买的，可惜以我当时的代码感知和撰写能力，看起来颇为吃力。 半途就看得云里雾里而中断了。最近我又重新拾起这本书， 将书中所写的境况与我这两年多来遇到的问题相互印证，才感受到这本经典的力量。 12 《调试九法——软硬件错误的排查之道》 一般当工程师把一个东西称为艺术甚至玄学的时候，说明这个东西难度很大，没有太多规律可以遵循，调试就属于此列。几乎每个程序员都有被bug搞到死去活来的经验，有时候颠来倒去，问题似乎解决了，但也不知道为什么，就把它当作不可解释的玄学现象，最烦人的一种bug是偶尔出现难以复现的，学名海森堡bug。 不过毕竟软件还是属于科学技术的范畴，调试也应当是门技术活。《调试九法》是一本少见的讲调试技术的书，九个普遍性的原则不仅适用于软硬件开发维护，甚至还能运用到日常生活，为了找到这本书我也是费了点神，幸好图灵社区还有正版的电子书卖。 说实话，作者举的很多例子偏硬件，所以理解起来有点隔膜，但是九个原则确实很实用，在我以前的开发调试经历中可能也不自觉的总结过一些，但是看了本书，还是有拿到武功心法的感觉。 13 《算法设计与分析基础第3版》 对算法做了一个很新颖的划分，可以看到它和我们经常看的算法书的知识点划分很不一样。作者得归类很不错。对一些常用思想做了分类。 比如作者对分治做了几个分类。纯思维层面的切入分析，而不像以前的分为一般算法和图论那样子。 书中有不错的习题。思想描述有一定的思维引导性质。 14 《实用J2EE设计模式编程指南》 从应用的层次看来。从价格和其本身的内容这个角度来比较的话，这本书还是很划算的。其前1/3的对设计模式的总结还是十分清晰的。而后面的相当多的关于EJB的内容就是根据读者的需要来看了。 15 《编写可读代码的艺术》 姑且不谈该书中提到的程序最优与否，本书在给广大的程序员上了一堂关键的编程品德学。就如同科学发展到一定程度出现对科学家应该具有什么品德展开讨论一样，本书也提出了作为一个出色的、有责任心的程序员应该具有的品质——让他人更容易看懂自己的代码。 从个人经验来谈，身边很多人编程时都是考虑如何完成程序的使命，很少有人去考虑别人是否看得懂。结果造成当别人看你程序时看不懂，问你你又不耐烦讲这种局面数不胜数。 本书从根本上——即编程的基本思想层面，告诉广大编程的人要具有编程的责任感，方便大家的同时才能方便自己。所以该书对程序员在思想启蒙上是一本不可多得的好书。 16 《大话设计模式(带目录完整版)》 用了三天时间把书看完了，确实是设计模式的入门书。虽然书中有些例子举得并不十分恰当，但基本上也把每个设计模式讲清楚了。 国内很多教材和教师讲述专业知识都是很枯燥的，如此则把很多初学者拒之门外，让一部分人丧失了学习的兴趣。而这本书则类似于少数名师一样，采用交互式及启发式地讲述方式，在不知不觉中向读者传授了知识。 就我个人而言，更倾向于如同专业论文一般严谨的表述方式，但如此以来在理解上就要多花一些工夫了。我们需要类似Gof《设计模式》的经典，但就目前而言，像本书一样，以大家所熟知的例子来描述问题，步步深入，具有中国特色风格的书，才是我们更加需要的。难得见到国人出的精品书籍，给5 分。 17 《程序设计方法》 这本书写得很nice，如果有人讲的话，小朋友是看得懂的。但是需要有小学数学的基础，否则的话开始的练习会不知所云。我想过，把开始的练习给改成字符串处理的话，会不会简单一点——最后觉得不会。 原因是为了说明白“嵌套”是怎么回事，小朋友一定先得有小学的算术表达式可以嵌套的这个观念才行。所以本书不推荐给国内五年级以下代数感觉不很好的小朋友。 18 《七周七语言：理解多种编程范型》 众所周知，每一种语言或复杂或简单，使用者想要使用到一定境界，都不是短短一周可以达成的。所以这本书从根本上就不是像副标题中描述的A Pragmatic Guide to Learning Programming Languages。 这本书更像是对“非主流”的语言界的一次全面概括。作者精挑细选的7门语言基本囊括了“非主流”界的各种范式，也不乏“非主流”界中的主流，名门望族。细致的描述了每一个语言的特性，以及多种语言之间的对比。 对于每一个喜欢language，想要了解language的计算机爱好者都不应该错过。有志想去独立的设计一个language的爱好者当然更不应该错过。 19 《程序设计语言——实践之路》 一句话，对于那些有兴趣了解程序设计语言的基本设计与功能的软件工程师而言，这是一本入门的好书。特别有助于深入了解某一种程序语言的特点，理解其优势与软肋，进而用好它，而不是迷失于世面上众多的语言的花哨的特性中。 20 《程序设计实践》 这是一本牢牢占据经典书架最起眼位置的小册子，也是最符合KISS之道的神作之一。 抛开已有的业界的best practices，这本书还修正了我记忆中的很多错误认识，Brian Kernighan、Rob Pike的大名自然是本书最好的招牌；但作者的求实态度更值得每一个认真的programmer学习。 整体上，全书采用一个实际问题作为切入点并且贯穿全书，涵盖了programming工作的各个方面，简明扼要却又发人深省。这个例子的选取本身就是非同谨慎的，规模不至于过大（100多行代码）但是又足以说明问题。 我最欣赏的是作者并没有特意偏袒C语言这个Unix的宠儿，而是兼顾了Java、C++、awk三种语言，并用事实揭示了如何更好的使用语言，如何在实际问题和应用场景中取舍。 读完全书，我特意从本书的网站上自习运行了作者的源程序，书中对于很多地方的分析和数据比较，在数年后技术突飞猛进的今天仍然没有发生本质变化。 21 《编码：隐匿在计算机软硬件背后的语言（美）佩措尔德》 当年参加计算机大赛的时候有个同学和我说计算机方面的东西，千万不要想太多……到今天我才明白他的意思。 1.这本书讲的是关于计算机工作原理最本质的问题，即使跨了一层语言仍然能感觉到原著深入浅出的风格，很详细； 2.想读得深入一点不妨准备点演算纸，我用掉了一叠A4画逻辑门； 3.如果当做一本教材来看，逻辑门部分的阐述是重点，是难点，也最有趣； 4.读完之后会明白为什么电气工程师那么值钱，因为不是变态搞不来； 5.个人觉得翻译还不错，或许和无对比有关，但技术部分并不存在太大问题，至少我一个外行看懂无碍； 6.打算以后会没事就拿出来翻翻。力荐。 22 《编程原本》 本书提供了有关编程的一种与众不同的理解。其主旨是，实际的编程也应像其他科学和工程领域一样基于坚实的数学基础。本书展示了在实际编程语言（如C++）中实现的算法如何在最一般的数学背景中操作。 这不是一本很容易读的书，它也不是能提升你的编程技能的秘诀和技巧汇编。本书的价值是更根本性的，其终极目标是提升你对编程的洞察力。要想从中大获裨益，需要从头到尾认真学习：阅读代码，证明引理，完成练习。到结束之时，你将看到如何把这里讨论的演绎方法应用到你的程序中，保证你做出的软件部件能一起工作，并表现出它们所应该表现的行为。 二.架构与设计系列：1 《敏捷软件开发：原则、实践与模式》 好的技术书籍的标准是通俗易懂；文字精炼；耐读，有吸引力；有思想性。uncle bob的书写功力有目共睹，而且他的技术修为也绝对无人质疑。因此他写的 这本书秉承了他一贯的优势。符合所有好处所具备的条件。所有我们可以毫无内疚的宣称，“这本书是我见过最好的书”。 孟岩作序，也为这本书的推广添砖加瓦。在序中他表现出来的轻身意切，让我们感受到了一个技术人员丰富的人文情怀。这也是我们搞技术的梦寐以求的一个高级阶段。 2 《深入浅出设计模式》 这是我看过最幽默最搞笑最亲切同时又让我收获巨大的技术书籍！森森的膜拜Freeman(s)！Amen！ 深入浅出，娓娓道来，有的地方能笑死你！不知是翻译还是原著的问题，有几个小地方有点小错误，个人观点，值得商榷。但是瑕不掩瑜啦！ 其实我最先买的那本是四人帮写的，四人帮那本是这本书的五分之一厚。但是这本书我只花了三天时间就读完了！ 3 《Unix编程艺术》 作为一个多年的开源（Open Source）拥趸，像《UNIX编程艺术》（The Art of Unix Programming）这样的好书自然不能错过。大约一周前我无意中在公司书柜中发现了它，立刻开始投入阅读。现在，我已经开始边读第二遍边作读书笔记了。 开篇的译序很有趣，第一句话就写道：“大多数译序是给作者说好话，顺便带动以下译本销量的，本篇是一个例外。” 这是我见过的最棒的序言开头之一，在表明了自己独特的观点和立场的同时，译者还有效地激起了读者的好奇心。我记得看到这儿当场就笑了。 4 《企业应用架构模式》 这本书真是相见恨晚！做企业应用这么多年，第一次看到一本书里把这些数据库对象关系、事务、并发、领域模型、MVC等等讲得这么详细而深入。Martin真不愧是大师级人物，读他的书你会很佩服他的观察力，那种善于从司空见惯的日常现象中发现秩序的能力。 5 《领域驱动设计.软件核心复杂性应对之道.软件核心复杂性应对之道》 全篇最核心的概念是，人类的记忆力思考力限制，会将一个大型系统耦合复杂化。为了更好的理解及团队成员的合作，必须将核心领域剥离出来。文章用很多篇幅讲述了剥离的方法，一句话，没有最正确的，只有更合适的，实践是检验方法的唯一办法。 我个人最深的感触是：做减法。在系统中先做减法，抽离出核心的领域，并不断重构，最终得到各个核心领域的关联及通用模型、模块。由于文章过于久远，以及翻译的问题，很多地方显得臃肿及啰嗦，甚至话痨。适合快速阅读。 6 《企业集成模式：设计、构建及部署消息传递解决方案》 这是一本有关使用消息传递进行企业集成的书。这本书并不只是介绍某种特别的技术或产品，而是为使用各种消息传递产品和技术的开发人员以及集成人员准备的。本书不会为企业应用集成建立商业案例，而是把重点放在如何实现应用的集成上。通过本书可以学会如何集成企业应用。. 7 《架构之美》 这是我读过的书中没读完就匆匆束之高阁的为数不多的书之一。连陈莱的《有无止境》我都坚持着看完了。而这本，实在读不下去了。 理由一：架构之美很难一句两句说清。美，本身是很虚幻的。不同人的认同度是不一样的。就像是建筑物，哥特式尖顶和拜占庭式圆穹顶各有偏好一般。 理由二：架构之美，很难讲清。即使这是一本案例教学的书，但这些案例都很大。短短十几页或者二十几页的文字如何能淋漓尽致的描述清楚呢？浮光掠影的提纲挈领，必然导致走马观花的感悟。只是隐隐约约的感受一下如此架构的味道，无法有切肤之感。 理由三：关于对架构理解的悟性。鄙人很少做架构方面的东西，对架构之美的领悟力自然不行。 不过这本书作为“之美”系列，还是有可圈可点的地方的，不过较之代码之美可就不止是小巫见大巫了。 8 《面向模式的软件架构_卷5_模式与模式语言》 纸质书借于美团图书馆，只半小时浏览，论文式语调，不偏向应用。适合写作时作为参考语料。 9 《亿级流量网站架构核心技术 跟开涛学搭建高可用高并发系统》 总结并梳理了亿级流量网站高可用和高并发原则，通过实例详细介绍了如何落地这些原则。本书分为四部分：概述、高可用原则、高并发原则、案例实战。从负载均衡、限流、降级、隔离、超时与重试、回滚机制、压测与预案、缓存、池化、异步化、扩容、队列等多方面详细介绍了亿级流量网站的架构核心技术，看后能快速运用到实践项目中。 不管是软件开发人员，还是运维人员，通过阅读《亿级流量网站架构核心技术》都能系统地学习实现亿级流量网站的架构核心技术，并收获解决系统问题的思路和方法。 10 《领域特定语言》 挺厚的一本书，如作者所说，要写的太多了，但是为了能出版，不可能面面俱到。是个很有难度的主题，作者也算是费劲心思。虽然是DSL，但本质还是归到编译那套东西（主要是前端），尤其是对于外部DSL，因此我会觉得《编程语言实现模式》更精彩一些。另外吐槽两点，一是有些示例代码喧宾夺主了，代码的逻辑比传达的模式要复杂；二是翻译有改进的空间。 11 《元素模式》 主要介绍了一种思想，一种工具。 思想是，将大众熟知的设计模式分解为更细粒度的元素模式。使用元素模式去自由组合发散，扩张现有设计模式，同时令他们的经过度大大上升。 工具是使用PIN 箱，使用PIN箱来分析设计模式，将模式之间的组合关系表达得更加清楚。可以让人们对于模式的日常交流更容易，更方便。 12 《设计模式：可复用面向对象软件的基础》 我感觉看这本书，有几个层次，每个层次对应着软件开发方面的境界。 第一个层次，看不懂。所谓模式，就是在长期写代码的过程中总结出来的一种经验。这在刚毕业或者工作一两年的软件开发的工程师中，很多就反应这本书很深奥，难看懂。一方面，书中的例子是C++写的，而且时间比较早，例子有点过时，另一个方面，自己经验不足，没有切身体会，对于其中的模式，无法联系到实际情况去理解。 第二个层次，往上靠。不管实际需要不需要，非得用上几个模式，觉得这样代码才漂亮，才上了档次。其实，用模式，是一种好的现象，但是希望在用的时候，问自己两个问题，用有什么好处？不用会有什么问题？如果回答上来了，则用;回答不上来，则不要用。大部分人，处于这个层次，我见过很多。最大的问题就是，把简单的问题复杂化，复杂问题简单化。 第三个层次，已忘记。会游泳的人，在游泳的时候，可能没人会想起游泳的注意事项以及要领。手脚和换气的动作，已经变成了肌肉的条件反射了。什么时候能够把模式变成你的手指的条件反射，那离编程高手就不远了。要达到这个层次，没有别的办法，不写几十万的代码是很难达到的。如果有志于编程，这本书应当是一本床头读物，学而时习之，时不时的拿出来看看，会有新的收获，编程是一种实践的工作，只有不断的coding，才能够提高，当已经达到忘了什么是模式，什么是架构的时候，已经可不看这本书了。 13 《设计模式：Java语言中的应用》 记得当时读的感觉是“略懂”，为了加深对设计模式的理解还照本宣科的模仿command pattern和Factory pattern写了一个基于数据库和Swing的ATM程序。现在回想起来，当时对设计模式既感到神秘又好奇的感觉真的很有意思。同时，真是《设计模式：Java语言中的应用》这本书帮我开启了设计模式的大门，浅显易懂，理论与实例结合，而且实例都写得很到位，这是这本书优秀的原因之一。 14 《编程珠玑（第2版）（第一部）》 打开这颗薄薄的珍珠，认真拜读了前言，记得非常清楚是作者说，一次不要读太多，一章足矣。 再读完第一篇，认真研习其后的练习题，这才发现，原先关于“算法罗列”的主观臆断是多么的错误。 是的，本书的确在强调算法，但是除了常规的算法，作者更多的是在表达出一种算法以外的思想：高效的算法没错，但是正确的事情应该用正确的方法来做。 每个算法都有高效的经典例子，但是什么时候用什么样的算法，探究问题的本质，真正的优雅的解决问题，才是本书所要传达的精神。 此外，值得一提的是书中那些传奇的故事，比如太空笔和铅笔，比如各鸽子和胶卷，类似稗官野史，但是又的确是真实发生的事件，在乐趣中一步步的佐证他的观点。（不得不说，这一点，《代码大全》和《深入理解计算机系统》也一样老道，看得令人赏心悦目）。 古人说的茅塞顿开，醍醐灌顶，确实可以用来描述我在读此书时的感受。 15 《编程珠玑(编程珠玑续篇)（第二部）》 薄薄的一本书，丝毫无愧于珠玑两个字能把书写薄写精的人都是无比厉害的人物，相信看过K&amp;R的的人都有类似的体会 只要看了第一章，我相信你会对这本书佩服得五体投地。一个简洁的小例子，几个看似简单的算法，实际上包含了很多算法设计的思想．看完第一章，我对数据库的几种外排算法有了更深层次的理解 本书最大的亮点就是引导你去思考，不停地去思考，思考最佳的解决方案。看本书是一个既痛苦也快乐的历程，痛苦在于你必须竭尽脑汁地去想，运用brain bursting去得出尽可能多尽可能好的方法，快乐在于你提出一个优雅的方案或者对大师的方案拍案叫绝的瞬间 16 《淘宝技术这十年》 两天的时间读完此书，总体评价是“轻松幽默、通俗易懂”。技术上属于科普的写法，不过这已经足够，真要写技术细节，恐怕很多人读不到第三章就要睡着了，再说技术上的东西更多的是靠实践而非看书，对于一个初学者，此书可以看作是大型网站技术登堂入室的引言书，展现了大的场景图画和基本的学习方向，符合此书的自我定位。 除了语言幽默、段子不断，此书中众多的微博“大佬”的链接也是很宝贵的资源，一个个链过去，你会发现，当年Eclipse还不太会用的子柳（本书作者）现在成了淘宝技术大学的校长，子柳的师傅、同事等要么成了taobao/tmall/alibaba的经理总裁，要么自己单干成了某某公司的CXO。可见，对于个人的成长，能力和机遇两者缺一不可。一个人首先要保证自己的基本能力达标，然后还需要在合适的时间抱上合适的大腿，这条大腿，可能是一个历史的机遇（如马云），也可能是在合适的时候加入一家合适的公司跟对一个合适的老板（如本书作者和他的众同事们）。“机会总是留给有准备的人”，此乃箴言。 17 《软件架构的艺术》（简称架构之美） 前几天有幸听了本书作者的一次培训，收益良多。老话说的好：纸上得来终觉浅 绝知此事要躬行。平心而论，这本书写的真的不错。系统讲解了软件架构的方方面面。观点清晰，结构严谨。但里面很多内容如果你没有一定的理论和实践基础，理解起来会比较困难，难以引起你的共鸣。走在前面的人总是孤独的，这也是培训中我能感觉到的作者本人的心情。 18 《软件框架设计的艺术》 这是本讲软件架构的实用性书，同时，这也是本架构非常好的书，但由于涉及内容实在太广，所以内容和架构相比显得过于单薄。本书由三大部分组成，第一部分是软件架构的概念，属于理论性部分；第二部分是软件架构本身；第三部分是架构师的各人技能。这个分类一下子把软件架构的众多技术分解为架构技术和个人技能两部分，非常赞。 架构概念非常简单，通过众牛人对软件架构的诠释，作者总结了架构的两个功用：软件组成和决策，两者都对，并不冲突，这是作者非常聪明的地方，一下子就缓解了大家的矛盾，并且把所有的观点都汇集到统一的框架之下。软件架构本身，又分为方法和过程两部分。方法既架构的五个视图：物理架构、逻辑架构、数据架构、开发架构和运行视图。过程则分为六个步骤：需求分析、领域建模、确定关键需求、概念性架构设计、细化架构和验证架构。其中概念性架构的作用是规划关键问题的解决策略；细化架构就是生成那五个视图。就像开头说的，这部分内容实在太广，作者只是谈了一些他的经验，实际内容严重不足。 个人技能无非就是从编码，设计，UML工具，软件过程四个不同层次来谈，而在设计方面又举了几个解耦合的例子，包括理解依赖关系、角色理论和设计模式等。总的来说，这本书的结构非常好，内容可以按照这个架构通过其他书籍慢慢补充。 19 《软件测试的艺术(原书第2版）》 本书的观点与传统软件测试理论形成了鲜明的对比，作者提出：软件测试的目的不是为了验证软件能够达到设计文档的要求，而是为了发现软件错误而运行软件的过程。当我刚开始学习测试技术的时候，很为该观点所动，但随着工作经验的增长，发现实际操作中无论是组织还是个人都很难达成作者的美好目标。毕竟，公司的预算、资源都很难让测试人员有机会进行所谓的完美测试。但，不管怎样，本书中提到的软件测试方法论对于任何一个从事软件测试甚至是开发人员都是大有裨益的。 推荐，5颗星！ 20 《HeadFirst设计模式》 写得很有趣，图文并茂，比起四人帮的那本，好懂了不知道多少倍。计算机世界的head first系列让我想起了阿呆系列，话说新的一集the big bang theory里面lennerd学习橄榄球的时候也有一本阿呆啊，哈哈，跑题了 不过只看书学明白设计模式是不可能的，这些只是前人的总结，我们唯有实践实践再实践了。 断断续续的看了一遍这本书，印象最深的还是项目中实际用到的那几个模式，比如观察者，状态，单件，工厂等，更加坚定了我实践的决心了哈~ 21 《编程语言实现模式》 自从2002年开始迷上编译原理，这么多年以来一直断断续续地学习，却一直处于半懂不懂且缺乏实践的尴尬境地，以至于都要引以为平生一憾了。昨晚看过本书前两章，感觉作者有两点做得好：一是首先建立大局观，不一上来就陷入细枝末节，这样比较容易入门；二是追求实用性，举的例子都是实际的语言应用，这样比较容易建立直观的联系。这其实也是学习比较复杂的理论时特别要注意的两点，所以最好是先找一本类似本书的入门书，有了大局观和一定的理论和实践基础后再看龙书这样的专业教科书，这样循序渐进，可以少走不少弯路。 三.方法学系列：1 《用户故事与敏捷方法完整》 现在的互联网产品开发早就摆脱了瀑布式的开发方法，不同公司有不同的定义产品需求的方式，书里的用户故事user story实际上和用例use case一样，是产品人员描述用户需求的方法，他得主要优点在于卡片式的形式加上简短的描述文字和约束条件方便交流理解，文档式的产品需求说明书内容繁多不利于与用户和市场人员交流。 互联网产品开发和传统的定制软件不一样，需求是自己挖掘出来的，而不是客户提出的，所以没有交流上的问题，所以用户故事和用例相比没有特别的优势，相反用例对于交互的描述对于开发分解task会更有帮助。所以，总结来说，没有最好的，只有最合适的 2 《金矿：精益管理 挖掘利润 （法）伯乐著》 《金矿》以小说的方式，描述了一家濒临破产的企业如何转亏为盈。这家企业即拥有技术优势，又拥有市场优势，但它却陷入了财务困境。危难之际，经验丰富的精益专家帮助企业建立起一套有竞争力的生产运作系统，通过不断改善，消除浪费，大幅度提高了生产效率和质量，库存很快转变为流动资金。本书用最简单的文字，阐述了实施精益生产所面临的挑战和解决方法，对于想要学习精益生产理论的宝宝们来说是一本很好的书。 3 《解析极限编程：拥抱变化（原书第2版）》 喜欢看这种很短的书，站在阳台就看完了，我都佩服我自己。里面有不少思想还是不错的，勇气，信任，开放，勾勒了一幅完全投入激情的工作的情景。里面很重要的一个思想是 把一个大的复杂的事情分解成小事情，先把最核心的事情做完，不断重构，不断快步向前。 4 《持续交付-发布可靠软件的系统方法》 我是“好的程序员的生产力十倍于差的程序员”这句话的信奉者，由此我期望的未来会有很多人数很少但精锐的小的软件开发组织存在。要在这样的未来生存，需要把一切能够自动化的事务都自动化，让宝贵的智力专注在最有价值的业务上。同时作为一个在大型互联网公司工作过数年的开发者，配置管理、部署和运维的复杂和困难另我深感敬畏，这种困难告诉我在开发和运维之间存在“失落的一环”，在这个弱点得到弥补之前，好的程序员也无法充分发挥其生产力。这本持续交付正是讲述了怎么弥补这失落的一环，把开发、提交、自动化测试、持续集成、自动化部署完整的串了起来。另外，infrastructure as code是非常强大的概念，必须学习。 5 《重构极限编程 XP的实践与反思》 TWI 的时候 MX 提到了这本书。这本书非常罕见的列举了很多XP 失败的例子，多数来自于邮件组的讨论。 这本书的出现或许会给人了一种感觉，这本书的目的是为了证明XP和Agile是不可行的~然而，事实上，该书的作者恰恰是DSDM（7大敏捷方法族中的一员）的创始人，同时也是敏捷宣言的签署人之一。 事实上该书的出现恰好像是一个灯塔，因为 Agile 的特殊性，很容易产生形似而神不合的伪“Agile”实现，从本质上说，这些实践都是反敏捷的，虽然它们都扣上了一个敏捷的帽子。这本书很好的把这些容易出问题的地方列举了出来，起到了一种警醒的作用。 6 《系统化思维导论》 这本书给我最大的收获，就是让我遇到了系统科学这门联系着数百门学科的学科。我读书的一个目的，就是掌握尽可能多元化思维方式，这样的阅读过程让我接触了许多不同的学科系统。但过多的系统也带来一个问题，如何统摄它们的关系呢？以往，我都是以非系统化的思维来进行学科系统的思考，就是一直停留在作者所说的一阶序状态，而这本书带给我新的管理方式——好像在脑子里装了一个全新的数据库管理系统。 其次，这本书让我凑巧碰到了另一本书，让我确定了接下来3个月的阅读主题”系统科学“。前中科院院长路甬祥曾说，系统科学是21世纪科学的趋势。我最近初步接触系统科学，惊诧于其对经典科学学科范式的颠覆，并惊异于其对现实中肯看法，深深觉得未来将会被系统科学改变革新，就像以前的文艺复兴，或许甚至可能是有史以来最大的科学革命。 7 《程序员的思维修炼：开发认知潜能的九堂课》 非常棒的方法论。作为程序员，我们喜欢追根溯源，从架构到语言设计，从语言设计到系统内核，从编程到思考大脑的本质。没错为了写出更好的代码，我们想要了解世界上的所有真理。尤其是对大脑，以及我们自身本质的理解。可惜科学依然没有揭开这层面纱，但我们渴望着。Andy Hunt这本书写的正是我们所渴望的东西，以及一些目前科学上的进展。 作为一个人，永远都受限与自身。只有提升自身，才是前进的根本。体育锻炼身体，思维修炼大脑。 8 《高效程序员的45个习惯：敏捷开发修炼之道》 在所有关乎技艺方面的工作，背后都有一个“道”或类似于“禅”的东西，一通百通。有时，你就得放弃已有的工匠情结，更多地要把自己的理念，思想都揉合在一个物件上，这时技术只是一个副产品罢了。今天iPhone的成功，绝不是因为它做工精细，品质优良，重要的是它带给人们简洁，方便的理念，将生活中的例子融合到了上面，屏幕翻页就像翻书一样直接。良质，我班门弄斧理解其中的一层含义是“直觉+判断”。这些都是形而上的，看不见，也摸不着，不好解释，但又确实存在。拥有好的良质，你的直觉和判断会很准。特别是在自然科学，尤其是数学，今日诸多数学定理都是在直觉和判断下“猜”出来的。 本书探讨了有关摩托车修理艺术，禅，宗教，自然科学，教育，哲学，数学，个人修行。包含如此广泛，谁敢说这仅仅是一部文学作品呢？ 9 《禅与摩托车维修艺术 罗伯特·M·波西格》 在所有关乎技艺方面的工作，背后都有一个“道”或类似于“禅”的东西，一通百通。有时，你就得放弃已有的工匠情结，更多地要把自己的理念，思想都揉合在一个物件上，这时技术只是一个副产品罢了。今天iPhone的成功，绝不是因为它做工精细，品质优良，重要的是它带给人们简洁，方便的理念，将生活中的例子融合到了上面，屏幕翻页就像翻书一样直接。良质，我班门弄斧理解其中的一层含义是“直觉+判断”。这些都是形而上的，看不见，也摸不着，不好解释，但又确实存在。拥有好的良质，你的直觉和判断会很准。特别是在自然科学，尤其是数学，今日诸多数学定理都是在直觉和判断下“猜”出来的。 本书探讨了有关摩托车修理艺术，禅，宗教，自然科学，教育，哲学，数学，个人修行。包含如此广泛，谁敢说这仅仅是一部文学作品呢？ 10 《人月神话》 这本书的格局我很喜欢这本书。 这本书从软件的乐趣和苦恼写起，体现了老一辈黑客的纯粹。也体现了生活哲学：莫忘初心。 确实，软件对于一个立志于建设的青年来说是最理想的场景：凭空，凭大脑，凭双手，凭一台计算机。 比尔盖茨起家的空手套白狼，google的双人组，twitter的大学寝室传奇。包括现在写日志的豆瓣网创始人咖啡馆一周完成故事。IT业是一个传奇的行业，传奇是软件的自然属性。 我也喜欢作者宽阔的视野。 四.思想与领导力系列：1 《卓有成效的管理者》 来看《卓有成效的管理者》吧！这本杜拉克的经典著作，尽管少有文采，也没有雄辩，但其间的“道”与“理”之真切和深刻，足以掩盖绝大多数的雄辩和华丽。尽管没有复杂的模型、结构和细致入微的分析（事实上，杜拉克的许多著作都充满了预言），但足以让绝大多数人信服，因为其中的“道”，因为其中的“理”。评价管理的唯一角度是“有效”，如果没有效果，尽管理论上很完美，但依然不能证明是有价值的；如果有效，尽管没有足够的理论证明，但仍然值得我们研究后借鉴。管理并不复杂，只要我们回到了本原上来。怎样才能有效，看看做了一辈子局外人、观察者的杜拉克的总结吧！ 2 《你的灯亮着吗》 类别：逻辑思维，我在犹疑能不能称它为伟大的书，但是可以肯定是一本好书，虽然翻译有些生涩。它揭示了人生是不断探索解决问题的过程，不让自己失去信心的只有一个万有引力。你的“道” 是什么。对问题要知道是谁的问题，问题的本质是什么？这本书知之甚迟，但也不算太晚。 3 《成为技术领导者》 看到温伯格逝世的消息去补读的。之前看过《你的灯亮着吗》，讲问题的定义的，这本《成为技术领导者》与其说讲领导力倒不如说讲如何在组织中解决问题，算是一个系列。这本书其实不太容易读，因为中心理论很清晰，道理也很平实，会让人觉得有点无聊，翻译不太好，事例也过于离散。不过最近一直在思考什么样的组织是最高效的，看了这本书，有很大的启发。书中开始就讲到“全面”(organic)模型，还是“线性”(linear)模型，这一点体会太深刻了。“线性模型”强调组织中人的角色，强调上下级和层级关系，忽略人的多样性；而“全面模型”重视人的多样性，基于这个模型去做假设。“所谓领导力，就是创造这样一个环境，每个人都能在其中发挥更多的能力”。 4 《第五项修炼》 回想自己成长的路上，关于成功、励志方面的书，多多少少也读了一些。曾经有一本书，激励了自己很久，是美国作家罗曼·W·皮尔著的《态度决定一切》。我从中学会了如何树立正确的人生态度，如何坚强而乐观地面对命运抉择。那个时候，印象最深的一句话是“不可如一秒钟前的自己”。是的，人本来每天都在变化之中，因此，如何把握这份变化，实在是一门十分重要的学问。然而，仅仅是态度的确立，是不够的；我们需要切实可行的实践法则，遗憾的是，那本书没有告诉我。接触到《第五项修炼》，我不禁惊叹于这位作者睿智而缜密的思考方式。比起其他大众化的励志书籍，这本书最吸引我的部分，尤其体现在&lt;第九章：自我超越&gt;。全文从对学习型组织的分析入手，来讨论真正的“自我超越”，不仅角度新颖，而且，重要的是，将个人的自我完善放在组织经营管理中分析，对我们每个人而言，具有莫大的实践性意义。 5 《思考快与慢》 一般来说，我会尽量避免“最佳图书”之类的表达，此之蜜糖、彼之毒药，从个人好恶出发的评价往往缺乏参考价值。不过，我很想说 《思考，快与慢》是我见过的最有用的书。原因有三：首先，这是本讲述知识和方法的工具书，有用与否相对客观，可以评价；其次，这本书的主题“如何思考”，涉及全体有脑子的人，远远超过《新华字典》（适用于中文使用者）和《圣经》（适用于基督徒）的适用范围；最后也是最重要的，这本书的结论是基于严谨事实、通过科学方法推导出来的，不管和“常识”是否相符，都不由你不相信。有些人或许会把这本书和那些文字漂亮但全是作者主观之见的心灵、励志书籍相提并论，但这种相似只在表面上，内里的东西则恰好南辕北辙。 6 《麦肯锡方法》 最近抽空重读了这本书，重读之前对这本书的印象基本为零，然而重读后发现，一些方法竟与我的一些读书、个人管理方面的原则一致，而这些原则也极大的提高了我的效率： 以事实为基础：事实有效地弥补了经验不足的缺陷 MECE：相互独立，完全穷尽，三个一级标题最佳 初始假设：不要让初始假设成为思想僵化的借口 不要重新发明轮子 二八法则 关键驱动因素 电梯法则：你可以在30s内向客户准确无误的解释自己的解决方案（产品、企&gt;业） 先摘好摘的果实：及早汇报，取悦顾客 每天绘制一张图表：今天学到的最重要的三件事是什么？ 一次只做一件事 不要妄想烧干大海：你烧干了大海，却只能得到一点盐 五.奇门遁甲系列：1 《软件调试的艺术》 调试对于软件的成败至关重要，正确使用恰当的调试工具可以提高发现和改正错误的效率。《软件调试的艺术》详细介绍了3种调试器，GDB用于逐行跟踪程序、设置断点、检查变量以及查看特定时间程序的执行情况，DDD是流行的GDB的GUI前端，而Eclipse提供完整的集成开发环境。书中不但配合实例讨论了如何管理内存、理解转储内存、跟踪程序找出错误等内容，更涵盖了其他同类书忽略的主题，例如线程、客户／服务器、GUI和并行程序，以及如何躲开常见的调试陷阱。 《软件调试的艺术》适合各层次软件开发人员、管理人员和测试人员阅读。 2 《世界是数字的.Brian.W.Kernighan》 《世界是数字的》是世界顶尖计算机科学家Brian W.Kernighan写的一本计算机科普类读物，简明扼要但又深入全面地解释了计算机和通信系统背后的秘密，适合计算机初学者和非计算机专业的人读。这真的是一本好书。对于一个计算机已经学了N年的专业人士来说，这本书也许简单了点，不过我还是认真过了一遍，发现也有一定的收货，因为一个人很难掌握本领域里的所有知识，或多或少会有一些欠缺，总会有一些你以前不知道的，或一直没理解清楚的但又很有必要知晓的知识，我在阅读此书过程中就有这种感觉，经常会有一种恍然大悟的感觉，比如理解了互联网上一些不为人知的跟踪原理。 3 《极客与团队》 总结来说，这本书写的是关于团队和社区的事。什么是团队，为什么要HRT。如何培养团队文化。如何领导团队。如何对付不良行为。如何应对组织问题。如何看待用户。整体来说，把程序员代码以外，与人沟通的事写了个纲领。 4 《计算的本质：深入剖析程序和计算机》 这半年读过的最漂亮的一本书，各种计算模型及某些通用计算模型的等价性、语义分析/语法分析以及最后一章的类型检查系统（给我感觉就是在写一个小的编译器或者解释器）、还有停机问题的具体介绍都非常精彩。最最重要的是，所有的论述都用上了 Ruby 代码，大部分例子理论上都是可以运行的！Ruby 的灵活性（比如代码即数据在某些语言中就不是很方便）给本书某些章节写实现时带来不少便利，第八章作者甚至一本正经胡说八道地用 evaluate function 写了个停机问题的函数，然后想尝试解决哥德巴赫猜想。 5 《计算机科学概论（原书第3版）》 这本书非常全面，几乎包括了计算机专业本科4年所需要学习的课程的基础介绍。如果你是相关专业的学生，应该在大一的时候读读，今后所学的知识就可以融会贯通了！ 6 《计算机系统概论》 无意间发现有人推荐这本书，看了它的介绍，发现讲的是很基础的东西，花一天时间粗略的看了一遍，我的主要关心点在高级语言在汇编、ISA、机器码的实现。出乎意料的讲的很明白。虽然不够深入，但是却能给人一个整体的概念，C程序如何一步一步的硬件实现。 感觉有点像是把数电、计算机结构、C语言、汇编几本书串起来了。在学校虽然这几门课都上过，却都是分离的概念。本书虽然有大量的篇幅讲汇编基础、C语言基础，但还是从中学到不少东西，不得不说，的确是一本好书，推荐给每个学CS及EE的人，哪怕像我一样粗略的读一遍。 7 《人件（原书第3版）》 在你从事软件开发这个行当的任何一个阶段和任何一个位置你都应该阅读的好书。在这个行业呆得越久，你越会发现这本书讲的这些绝对是真理。 唯一一本我任何时候更换办公位置都随身携带的书 8 《深入理解计算机系统》 如果大学只能带走一本书的话，我选择这本。这是本很有趣的书，了解计算机底层技术是件极富挑战同趣味的事情。大二以后基本没再阅读过哲学历史文学方面的书籍，因为这样的书籍足以给人带来极大乐趣。 个人认为这样的书籍，计科专业的本科学生越早接触越好，它会让你比别人更早拥有一个系统的计算机知识，更能触类旁通。如果想从事底层开发或在Linux平台下开发，这本书是很好的选择。 另外，这本书的翻译纸张都很不错，很多的词汇译者都在前面做了说明。这是为数不多让人不抱怨翻译的技术书籍，如果英文不过硬，看中文版也是很享受的一件事情。聪明的你会喜欢这本书的。 六.互联网大佬奇迹传记系列：1 《史蒂夫·乔布斯传》 春节七天看完的，不得不承认有好几次心潮澎湃的时候，比如几个产品的诞生。最后并没有直接描写他的死，但病危之后的那些细节却让人印象深刻。乔布斯并没有好的人品，脾气也很差，只是凭借与生俱来的敏锐创造了美好的事物。最后他自己说的，有着综述性质的一段话尤其好。有些描写非常生动，比如乔布斯贯穿始终的哭哭啼啼。他用披头士的 Two of Us 的歌词来形容过跟比尔·盖茨的关系——Two of us have memories longer than the roads that stretches out ahead.尽管时常怒气冲冲，说起这种话来也肉麻得可以。 2 《沃兹传：与苹果一起疯狂》 读完《乔布斯传》这本书，几天后，乔布斯的光环渐渐褪去，并且阅读《沃兹传》，总觉得乔布斯被市场高估了许多，而沃兹被市场低估了许多。必须要承认，乔布斯是很了不起的一个家伙，但早年成名的他，更多地是利用其推销自己和产品的能力，用《引爆点》的关键人物法则来评估的话，沃兹是那个内行，而乔布斯则充当了联络员和推销员的角色，一个产品的流行固然缺少不了后两者的参与，但是后两者的努力是0，内行，那个创造出产品的人，沃兹，才是0前面的1。换句话说，没有沃兹的乔布斯，将会大不一样，而没有乔布斯的沃兹，还是那个沃兹，那个善良的，痴迷于技术的，喜欢恶作剧的，梦想着成为工程师和教师的电子小孩。 3 《图灵的秘密 他的生平、思想及论文解读》 由Windows编程大师Charles Petzold耗时多年编写的这本书剖析了现代计算机原理开山之作、阿兰•图灵流芳百世的论文 “On Computable Numbers, with an Application to the Entscheidungsproblem”。图灵在其中描述了一种假想的计算机器，探索了其功能和内在的局限性，由此建立了现代程序设计和可计算性的基础。这本书也像是一本小说，行文间穿插讲述了图灵的成长经历和教育背景，以及他跌宕起伏的一生，包括破解德国恩尼格密码的传奇经历，他对人工智能的探索，他的性取向，以及最终因同性恋的罪名而在41岁时自杀的悲惨结局。全书完整揭示了阿兰•图灵非凡、传奇而悲剧的一生，是了解图灵的思想和生平的极好著作。 4 《苹果首席设计师_乔纳森传》 书的前一小部分还是天才少年的追梦成材之路，由此窥见他对设计的热情、执着（或者说对待自己作品的节操更好？），直到写到他进了苹果，几乎就变成苹果设计的发展历程简介了，可见乔纳森在苹果崛起中的灵魂式作用。从电脑介绍道ipod再到iphone、ipad、macbook，我今天才知道这些带领自己紧跟时代步伐的产品背后有着怎样的考量与坚守，它是如何在我们看来只是一种造型的细节背后抓狂并完善的。 比如，它是如何舍弃仿真设计而扁平化的，它是如何解释ipod第一代应当是白色的——“它不仅仅是一种颜色，还是一种中立态度，在两个极端中极明显，又中立”。它真的可以被作为杰出的艺术品来欣赏，因为里面全都是乔纳森团队加上乔布斯的世界观啊。乔纳森和苹果的成功真是对创造的赞美，对理想的歌颂。 5 《雷军：人因梦想而伟大》 有时间也可以看下的鸡汤文，名头很大是雷大大的，不过内容每个人看法不一，感兴趣就自己阅读吧。 6 《马云传》 本书以一个前所未有却又真实切近的视角揭开马云的真面目，没有冗长的说教，没有空洞的吹捧，只有冷静丰富的细节；没有高深的理论，没有虚假的传言，只有通俗、诚恳的陈述，详尽地展现了马云的成长经历、创业生涯和缔造阿里巴巴的全过程。 7 《企鹅凶猛：马化腾的中国功夫》 昨夜了了读完《企鹅凶猛》一书，此刻坐在客厅茶几前写读书笔记。作者通过腾讯发展及业务扩张这条主线，不仅剖析了马化腾的一些经营思路，更引出了互联网行业十年来诸多叱咤风云的焦点人物，读起来竟如传记或江湖小说般精彩。 8 《拒绝平庸 周鸿祎和他的创士记》 1、你要考虑——未来的10-15年，你到底要成为什么样的人？你到底想获得什么？这是最重要的。想想等你35岁同学聚会的时候，你希望呈现在他们面前的是什么样的你。 2、梦想很重要，但是锁定梦想却不容易。第一是人随着年龄增长兴趣点也在变；第二是诱惑太多。 3、别人在某一点比你强，就会在其他方面比你弱。不要自卑，最重要的是能够吸取教训。 4、年轻的时候尽量走远一点。真正的视野开阔不是我们去旅行，而是那些过了脑子再过心最后留下的东西。 5、反思，以及细致的剖析自己很重要（需要学习袁春楠） 6、不要害怕自己的不完美，重要的是要改。 7、只有有能力的人才会得到更多的资源和更大的舞台。 8、如果你不喜欢一个地方，尽快找到自己喜欢的东西，值得投入的东西。 9、不要想着因为钱多而混在一个地方——一年20万，五年就100万，但是你白搭了5年青春，这值多少钱啊！ 10、努力奋斗了，迅速成长了，除了发财之外，你还能收获影响力。只要踏踏实实把一件事做下去，每个人都会成功一件事情。 11、人生不一定一定能够干成一件大事，但是一定要去追求，去和别人一起干一件很大的事情。 12、如果你没有能力，你就没法放弃那家不能让你成长的公司。 9 《比尔盖茨全传》 伟人大多都是天赋秉异，常人难以学习；读了这么多传记，发现这些伟大成功的人都有个共同点：聪明、对事业执著、自信、狂热。 所以作为普通大众的我们来说 我们还需要锻炼这些品质，等待机遇的出现。 10 《阿桑奇自传》 维基解密揭露的那些政治、金融、宗教、军事、外交的丑闻，其实并不让人惊讶。这些东西有史以来就存在，大家都知道只是没有说破。就像齐泽克所说，所有这些阴谋只是“皇帝的新衣”。维基解密所做的就是把它们赤裸裸地暴露出来，使社会保持透明和清廉，真相得到还原。阿桑奇就是那个解密了皇帝新衣的男孩，总是用一份纯真之心去观察和评论，与谣言和黑幕作战。这是一本战斗性很强的书，因而非常吸引人。 11 《马云：我的成功不是偶然，给年轻人的创业课.任雪峰》 1、该书只是引用马云的话，作为每一章，每一节的中心，而其内容都是作者自己的思想，而非马云的，我看到这本书的时候，以为主要是马云讲的，而其实，这是一个误区。 2、每一章都有马云教谕，我觉得这只是作者为了讲述其内容，而加上去的卖点，若是要看马云语录，还是直接去找其他关于马云的书，这本书明显不是很多。 3、书中的很多例子，应该说不是很新鲜，不算很好。因此，我觉得该书还行，不算上乘，但还过得去，毕竟还是能学到不少知识的。 12 《编程人生_15位软件先驱访谈录》 读完图灵俱乐部译的《编程人生》的前两章，给我第一感觉就是：听君一席话，胜读十年书。 Peter Seibel先生对编程先驱Zawinski、Fitzpatrick的访谈非常精彩。从这两章访谈中，我收获到了以下几点： 1. 保持好奇心，充满激情，编程人生才精彩，编程人生才快乐。著名黑客Zawinski好拆卸电子玩具一样对软件的内在充满了好奇，Fitzpatrick从小就对软件的神奇如痴如醉。同时，Fitzpatrick告诉我们，绝不能把编程仅仅当工作来看待，而应该是一件充满乐趣的事情。换言之，作为一个软件开发者，如果你仅仅以薪资衡量你的代码的话，那么还是赶快找个后路吧。 2. 语言没有优劣之分，在语言之间的优劣性方面打口水战是毫无意义的。在Perl语言方面，Zawinski和Fitzpatrick就存在巨大的分歧。 Zawinski认为Perl的语法太过古怪，数据结构一团糟；而Fitzpatrick就非常喜欢Perl的灵活性。而在C++语言方面，两位大师表现出一直性厌恶型。不过，对C++的厌恶只是厌恶，Fitzpatrick还是得用C++来构建高性能的程序。 3. 大师们与我们同在。Zawinski为Emacs贡献了很多。在我们用Emacs编辑代码时，Zawinsk与我们同在。当我们使用memcache这个Web前端利器时，Fitzpatrick就与我们同在。 4. 教育要从娃娃抓起。Zawinski和Fitzpatrick很小就接触了编程，发现并且发展了这方面的能力，终成一代大师。 5. 做软件产品，情况不同，侧重点也不同。做新产品抢地盘，及时推出质量合格的产品才有生存的机会。而有条件的话，早期更充分的考虑软件产品后面运营可能遭遇到的问题，后面改动的成本就会大大降低。 后面还有十三位大师的访谈录，真想知道会带给我些什么更精彩的内容。 13 《史玉柱自述：我的营销心得》 如题。有兴趣研究营销的可以参考下史大大的广告引流心得。 14 《一网打尽贝佐斯与亚马逊时代》 试读本的内容读完觉得不过瘾 关于亚马逊，实在有太多理由让我们去了解商业周刊中文版的封面文章确实很震撼，想了解亚马逊的商业秘密的人，赶紧去先睹为快吧。 我想如果是电商人，更应该看看吧好书值得推广，强烈建议电商人组团学习此书 我完全相信这本是亚马逊2.0版本的说法，并且比较想看新书全文。 15 《世界因你不同：李开复自传》 “中国一百年才出一个李开复”，这话一点都不为过。另，这书很好读，字里行间都透露着简单和朴素的韵味，即使是在说IT，即使是在说教，但读下来仍是一气呵成而又有发自内心的深深崇敬，绝对是一本励志的好书！ 16 《编程大师访谈录》 绝大多数被采访的程序员都有暑假替学校打工的经历。从言谈中看出，他们很看中这样的经历，很强调这些工作的实际背景和内容，并认为由此加深了对编程工作的理解。很多人就是通过这些暑假工作爱上了编程。 但是，他们从未提及在这些工作中获得了什么荣誉称号什么的，而这正是许多中国学生做项目的时候非常在意的。我不得不说现在的高校真的是浮夸、不务实到成了习惯，吹牛吹到自己都信以为真的地步了。那种想踏实进步的人反倒成了另类。大家都懂的，说也懒得说了。 17 《DOOM启世录》 一本讲美国一家游戏公司ID创业历程的书。ID开发出了DOOM和Quake两款当时风靡世界的游戏，收个互联网多人联机游戏。本书详细描写了ID公司创始人如何相识、如何开始一起创建公司、公司壮大、创始人意见不合分道扬镳的过程。对想要在软件及电子游戏方面创业的人有较大的借鉴意义。 1.创业的乐趣。创业更自由，工作更有趣，气氛更活泼时，是最有生产力、创造力的时段。之后公司壮大，人员增多，管理越来越规范，工作就会失去乐趣，变得枯燥无聊。 2.对某件事的热爱，狂热的兴趣是成为大牛的必备要素。因为兴趣，怎么加班都不累！ 3.专注的力量。专注让卡马克成为游戏引擎上的大牛。 4.互联网创业真是暴利。 18 《奇思妙想：15位计算机天才及其重大发现》 原来KMP的灵感来自有限自动机，这才是正解啊！原来LaTeX的作者Lamport竟然是分布式系统专家！原来定义list真的是为了逻辑推理！……那些囫囵咽下去的精妙的算法、数据结构只有放到历史的上下文中才能鲜活起来。 19 《孵化Twitter 从蛮荒到IPO的狂野旅程》 本书详细讲述twitter的发展史。感觉基本上是一部创始人从朋友变敌人，勾心斗角的历史。Twitter本身的产品发展反而相对比较简单。书中披露了许多email、谈话、会议的细节，作者说这些是数百个小时的采访，1000多份内部文件和数不清的互联网上的资料中挖掘出来的。 令人吃惊的是书中指名道姓地披露了几位创始人的许多负面的信息。还都不像是编的。 汇总目录：一.编程实践系列：1.《代码整洁之道》2.《卓有成效的程序员》3.《程序员的职业素养》4.《重构与模式》5.《代码大全》6.《实现模式》7.《程序员修炼之道》8.《高性能MySQL》9.《修改代码的艺术》10.《计算机程序的构造和解释》11.《重构：改善既有代码的设计(中文版)》12.《调试九法——软硬件错误的排查之道》13.《算法设计与分析基础第3版》14.《实用J2EE设计模式编程指南》15.《编写可读代码的艺术－完整版（带书签）》16.《大话设计模式(带目录完整版)》17.《程序设计方法》18.《七周七语言：理解多种编程范型》19.《程序设计语言——实践之路》20.《程序设计实践中文版》21.《编码：隐匿在计算机软硬件背后的语言（美）佩措尔德》22.《编程原本》二.架构与设计系列：1.《敏捷软件开发：原则、实践与模式》2.《深入浅出设计模式》3.《Unix编程艺术》4.《企业应用架构模式》5.《领域驱动设计.软件核心复杂性应对之道.软件核心复杂性应对之道》6.《企业集成模式：设计、构建及部署消息传递解决方案》7.《架构之美》8.《面向模式的软件架构_卷5_模式与模式语言》9.《亿级流量网站架构核心技术 跟开涛学搭建高可用高并发系统》10.《领域特定语言》11.《元素模式》12.《设计模式：可复用面向对象软件的基础》13.《设计模式：Java语言中的应用》14.《编程珠玑（第2版）（第一部）》15.《编程珠玑(编程珠玑续篇)（第二部）》16.《淘宝技术这十年 完整版》17.《软件架构的艺术》（简称架构之美）18.《软件框架设计的艺术》19.《软件测试的艺术(原书第2版）》20.《HeadFirst设计模式》21.《编程语言实现模式》三.方法学系列：1.《用户故事与敏捷方法完整中文版》2.《金矿：精益管理 挖掘利润 （法）伯乐著》3.《[解析极限编程：拥抱变化（原书第2版）》4.《持续交付-发布可靠软件的系统方法完整版》5.《重构极限编程 XP的实践与反思》6.《系统化思维导论》7.《程序员的思维修炼：开发认知潜能的九堂课》8.《高效程序员的45个习惯：敏捷开发修炼之道》9.《禅与摩托车维修艺术 罗伯特·M·波西格》10.《人月神话》四.思想与领导力系列：1.《卓有成效的管理者》2.《你的灯亮着吗》3.《成为技术领导者》4.《第五项修炼》5.《思考快与慢》6.《麦肯锡方法》五.奇门遁甲系列：1.《软件调试的艺术》2.《世界是数字的.Brian.W.Kernighan》3.《极客与团队》4.《计算的本质：深入剖析程序和计算机》5.《计算机科学概论（原书第3版）》6.《计算机系统概论》7.《人件（原书第3版）》8.《深入理解计算机系统》六.互联网大佬奇迹传记系列：1.《史蒂夫·乔布斯传》2.《沃兹传：与苹果一起疯狂》3.《图灵的秘密 他的生平、思想及论文解读》4.《苹果首席设计师_乔纳森传》5.《雷军：人因梦想而伟大》6.《马云传》7.《企鹅凶猛：马化腾的中国功夫》8.《拒绝平庸 周鸿祎和他的创士记》9.《比尔盖茨全传》10.《阿桑奇自传》11.《马云：我的成功不是偶然，给年轻人的创业课.任雪峰》12.《编程人生_15位软件先驱访谈录》13.《史玉柱自述：我的营销心得》14.《一网打尽贝佐斯与亚马逊时代》15.《世界因你不同：李开复自传》16.《编程大师访谈录》17.《DOOM启世录》18.《奇思妙想：15位计算机天才及其重大发现》19.《孵化Twitter 从蛮荒到IPO的狂野旅程》 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 总结：天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 附①【Java】学习之路吐血整理技术书从入门到进阶最全50+本（珍藏版)：https://pymlovelyq.github.io/posts/ace53344/②【算法数据结构+acm】从入门到进阶吐血整理书单50+本（珍藏版)：https://pymlovelyq.github.io/posts/32a7f0eb/③【数据库】从入门到进阶必读18本技术书籍网盘吐血整理网盘(珍藏版):https://pymlovelyq.github.io/posts/ad3ee381/④【Web前端】书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍&gt;藏版）：https://pymlovelyq.github.io/posts/4957c3df/⑤【python】书最全已整理好（从入门到进阶）(珍藏版)：https://pymlovelyq.github.io/posts/f62e09cf/⑥【机器学习】+python整理技术书（从入门到进阶已经整理好）（珍藏版）：https://pymlovelyq.github.io/posts/e7071c91/⑦【C语言】推荐书籍从入门到进阶带你走上大牛之路（珍藏版）：https://pymlovelyq.github.io/posts/33303225/⑧【安卓】入门到进阶推荐书籍整理pdf书单整理（珍藏版）：https://pymlovelyq.github.io/posts/a25a10d/⑨【架构师】之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)：https://pymlovelyq.github.io/posts/e140888d/⑩【C++】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/77edf265/]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>架构</tag>
        <tag>程序员</tag>
        <tag>传记</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[十一.IOS书单从入门到进阶吐血整理(珍藏版)]]></title>
    <url>%2Fposts%2F66dfe877%2F</url>
    <content type="text"><![CDATA[极客侠网站导航（全部书单资源导航页）：https://pymlovelyq.github.io/archives/ 前言：技术书阅读方法论总结一.速读一遍（最好在1~2天内完成）人的大脑记忆力有限，在一天内快速看完一本书会在大脑里留下深刻印象，对于之后复习以及总结都会有特别好的作用。 对于每一章的知识，先阅读标题，弄懂大概讲的是什么主题，再去快速看一遍，不懂也没有关系，但是一定要在不懂的地方做个记号，什么记号无所谓，但是要让自己后面再看的时候有个提醒的作用，看看第二次看有没有懂了些。二.精读一遍（在2周内看完）有了前面速读的感觉，第二次看会有慢慢深刻了思想和意识的作用，具体为什么不要问我，去问30年后的神经大脑专家，现在人类可能还没有总结出为什么大脑对记忆的完全方法论，但是，就像我们专业程序员，打代码都是先实践，然后就渐渐懂了过程，慢慢懂了原理，所以第二遍读的时候稍微慢下来，2周内搞定。记住一句话：没看完一个章节后，总结一下这个章节讲了啥。很关键。三.实践（在整个过程中都要）实践的时候，要注意不用都去实践，最好看着书，敲下代码，把重点的内容敲一遍有个肌肉记忆就很不错了。 以及到自己做过的项目中去把每个有涉及的原理的代码，研究一遍，就可以了 接下来我们按照ios从网络层、架构、程序设计、编程思想、进阶、动画、数据结构与算法、Swift、跨平台、面试文档这些层面来推荐书籍。懂的人自然懂吧，就不多说了。 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 资源图示： 以下是每本书的推荐语，清楚自己缺的是什么，就下定决心去补吧，一个好工作意味着高收入，投资自己的时间换来更宝贵的东西。 一、网络层 1.《HTTP权威指南（中文版）》 2.《IOS网络高级编程》 二、架构、程序设计、编程思想 1.《OBJECTIVE－C编程之道 IOS设计模式解析》 2.《一线架构师实践指南（温昱）》 3.《Cocoa设计模式》 4.《Objective-C程序设计》 5.《kkbox-iOS-dev》 6.《Cocoa基本原理指南》 7.《Objective-C编程全解 第3版》 8.《深入浅出iPhone Pad开发(第2版).((美)Dan Pilone).》 9.《AppStore掘金iPhone SDK应用程序开发》.((美)Jonathan Zdziarski)》 三、进阶 1.《Effective Objective-C 2.0 编写高质量iOS与OS X代码的52个有效方法》 2.《iOS开发进阶》 3.《精通iOS开发(第8版)》 4.《iOS核心开发手册 原书第5版》 5.《iOS高级编程》 6.《iOS Auto Layout开发秘籍 第2版》 7.《iOS编程实战》 8.《iOS 11应用开发基础教程Swift4.0》 9.《iOS 8开发指南》 10.《iOS_Animations_by_Tutorials_v4.0》 11.《ios应用安全权威指南》 12.《IOS开发指南 从HELLO WORLD到APP STORE上架 第5版》 13.《iOS移动开发从入门到精通》 14.《iOS编程基础：Swift、Xcode和Cocoa入门指南》 15.《iOS编程基础指南》 16.《ios编程基础swiftxcode和cocoa入门指南》 17.《Objective-C高级编程 iOS与OS X多线程和内存管理》 18.《精通iOS框架 第2版-2016》 19.《高性能iOS应用开发中文版》 20.《李刚-疯狂iOS讲义(第2版上)Objective-C 2.0与iPhone iPad应用开发基础》 21.《iOS测试指南》 22.《avfoundation秘籍-实践掌握ios和os X的应用视听技术》 23.《深入解析 MAC OS X &amp; IOS 操作系统》 24.《IOS增强现实应用开发实战》 25.《iOS 6开发进阶与实战》 26.《多线程技术在iOS开发中的使用》 27.《疯狂iOS 讲义(上) Objective-C 2.0与iPhone iPad应用开发基础》 28.《疯狂iOS讲义(下)——iPhoneiPad高级应用与手游开发》 29.《iOS用户体验设计》([美]Timothy Wood) 四、动画编程 1.《IOS动画核心技术与案例实战》 2.《iOS图形图像、动画和多媒体编程技术最佳实践》 3.《iOS 实战图形图像、动画和多媒体卷Swift版 [关东升 著] 》 4.《A GUIDE TO iOS ANIMATION 2.0》 五、数据结构与算法 1.《数据结构与算法分析——C语言描述（原书第2版）》 2.《大话数据结构》 3.《算法图解》 4.《算法导论中文版》 5.《啊哈！算法.啊哈磊》 六、Swift 1.《swift4.0官方文档（中文）带书签》 2.《Swift iOS应用开发实战 》 3.《Swifter-Swift 开发者必备 Tips (第四版)》 4.《Swift开发实战权威指南》 5.《Swift编程权威指南（第2版）》 6.《SWIFT语言实战晋级 第2版》 7.《Swift语言实战精讲》 8.《The Swift Programming Language中文完整版》 9.《Sprite Kit编程指南》 10.《functional-swift-cn》 11.《写给大忙人看的Swift》 七、跨平台 1.《Learning.React.Native—React.Native开发指南》 2.《用HTML5开发IOS应用》 八、面试文档 1.《iOS开发笔试题600道-笔试手写篇》 2.《iOS开发面试题400道-面试问答篇 3.《程序员面试宝典 第5版-欧立奇》 4.《程序员面试宝典（第四版)》 5.《程序员面试宝典老外》 所有资源百度网盘链接：https://pan.baidu.com/s/1C0RDhilrwlmEIZ811oAZoA提取码：s9si复制这段内容后打开百度网盘手机App，操作更方便哦备注：里面已经顺便整理压缩好，需要下载后才可以打开，网盘直接打开会显示损坏。 天下没有不劳而获的果实，望各位年轻的朋友，想学技术的朋友，在决心扎入技术道路的路上披荆斩棘，把书弄懂了，再去敲代码，把原理弄懂了，再去实践，将会带给你的人生，你的工作，你的未来一个美梦。 附①【Java】学习之路吐血整理技术书从入门到进阶最全50+本（珍藏版)：https://pymlovelyq.github.io/posts/ace53344/②【算法数据结构+acm】从入门到进阶吐血整理书单50+本（珍藏版)：https://pymlovelyq.github.io/posts/32a7f0eb/③【数据库】从入门到进阶必读18本技术书籍网盘吐血整理网盘(珍藏版):https://pymlovelyq.github.io/posts/ad3ee381/④【Web前端】书单从HTML到JS到AJAX到HTTP从框架到全栈过来人帮你走更少弯路（珍&gt;藏版）：https://pymlovelyq.github.io/posts/4957c3df/⑤【python】书最全已整理好（从入门到进阶）(珍藏版)：https://pymlovelyq.github.io/posts/f62e09cf/⑥【机器学习】+python整理技术书（从入门到进阶已经整理好）（珍藏版）：https://pymlovelyq.github.io/posts/e7071c91/⑦【C语言】推荐书籍从入门到进阶带你走上大牛之路（珍藏版）：https://pymlovelyq.github.io/posts/33303225/⑧【安卓】入门到进阶推荐书籍整理pdf书单整理（珍藏版）：https://pymlovelyq.github.io/posts/a25a10d/⑨【架构师】之路史诗级必读书单吐血整理四个维度系列80+本书(珍藏版)：https://pymlovelyq.github.io/posts/e140888d/⑩【C++】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/77edf265/⑪【ios】吐血整理推荐书单从入门到进阶成神之路100+本(珍藏):https://pymlovelyq.github.io/posts/66dfe877/]]></content>
      <categories>
        <category>博客</category>
      </categories>
      <tags>
        <tag>ios</tag>
      </tags>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2Fposts%2F0%2F</url>
    <content type="text"></content>
  </entry>
</search>
